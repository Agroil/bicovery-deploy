{"version":3,"sources":["helpers/IntlMessages.js","components/common/CustomBootstrap.js","views/user/create-profile.js"],"names":["injectIntl","props","withRef","Colxx","widths","Separator","className","CreateProfile","onCreateProfile","values","loading","avatar","password","first_name","last_name","gender","birth_date","phone_number","replace","updateProfile","Date","toISOString","is_new","history","validateEmail","value","error","test","validateFirstName","length","validatePassword","validateMatchPasswords","match_password","doLogout","$event","preventDefault","logoutUser","onClose","setState","open_avatar_loader","onCrop","avatarBase64","dataurl","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","type","dataURLtoFile","onBeforeFileLoad","elem","target","files","size","openAvatarLoader","window","setTimeout","avatarLoader","document","querySelector","click","id","state","preview","this","getProfile","phoneNumberMask","initialValues","conformToMask","guide","conformedValue","xxs","xs","sm","md","lg","xl","xxl","to","enableReinitialize","onSubmit","errors","touched","handleChange","handleBlur","handleSelect","setFieldValue","style","height","name","field","alt","src","cursor","width","position","left","onClick","onFileLoad","onAvatarLoad","borderStyle","borderWidth","borderColor","labelStyle","textIndent","label","validate","autocomplete","selected","onBlur","onSelect","onChange","date","dateFormat","placeholder","mask","disabled","bind","href","color","dataBuffer","propsChanged","Object","entries","key","console","info","Component","connect","authUser","user","activeVerificationCode","profile"],"mappings":"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","file":"static/js/user-create-profile.77b758a9.chunk.js","sourcesContent":["import React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nconst InjectMassage = props => <FormattedMessage {...props} />;\n\nexport default injectIntl(InjectMassage, {\n    withRef: false\n});\n","import React from 'react';\nimport { Col } from 'reactstrap';\nconst Colxx = (props) => (\n    <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\n);\nconst Separator = (props) => (\n    <div className={`separator ${props.className}`}></div>\n);\nexport { Colxx,Separator }","import React, { Component, Fragment } from \"react\";\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from \"reactstrap\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getProfile, updateProfile, logoutUser } from \"../../redux/actions\";\n\nimport IntlMessages from \"../../helpers/IntlMessages\";\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\nimport MaskedInput, { conformToMask } from \"react-text-mask\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport Avatar from \"react-avatar-edit\";\nimport Preview from \"@material-ui/core/Avatar\";\n// import data from \"../../data/notifications\";\n\nclass CreateProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    const {\n      id = \"\",\n      avatar = \"\",\n      first_name = \"\",\n      last_name = \"\",\n      birth_date = \"\",\n      gender = \"\",\n      phone_number = \"\"\n    } = this.props;\n\n    this.state = {\n      id,\n      avatar,\n      first_name,\n      last_name,\n      birth_date,\n      gender,\n      phone_number,\n      password: \"\",\n      match_password: \"\",\n      preview: \"\",\n      open_avatar_loader: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.getProfile();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const {\n      id,\n      avatar,\n      first_name,\n      last_name,\n      birth_date,\n      gender,\n      phone_number\n    } = props;\n    const dataBuffer = {\n      id,\n      avatar,\n      first_name,\n      last_name,\n      birth_date,\n      gender,\n      phone_number\n    };\n    let propsChanged = false;\n\n    for (let [key, value] of Object.entries(state)) {\n      if (dataBuffer[key] !== value) {\n        dataBuffer[key] = props[key] || value;\n\n        propsChanged = true;\n      }\n    }\n\n    console.info(\"dataBuffer: \", dataBuffer);\n    return propsChanged ? dataBuffer : null;\n  }\n\n  onCreateProfile = values => {\n    if (!this.props.loading) {\n      let {\n        avatar,\n        password,\n        first_name,\n        last_name,\n        gender,\n        birth_date,\n        phone_number\n      } = values;\n\n      phone_number = `+${phone_number.replace(/\\D/g, \"\")}`;\n\n      this.props.updateProfile(\n        {\n          password,\n          gender,\n          birth_date:\n            birth_date instanceof Date\n              ? birth_date.toISOString().replace(/T.+Z/, \"\")\n              : \"\",\n          last_name,\n          first_name,\n          avatar,\n          phone_number,\n          is_new: false\n        },\n        this.props.history\n      );\n    }\n  };\n\n  validateEmail = value => {\n    let error;\n\n    if (!value) {\n      error = \"Please enter your email address\";\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n      error = \"Invalid email address\";\n    }\n\n    return error;\n  };\n\n  validateFirstName = value => {\n    let error;\n\n    if (!value) {\n      error = \"Please enter your first name\";\n    } else if (value.length > 30) {\n      error = \"First name must not be longer than 30 characters\";\n    }\n\n    return error;\n  };\n\n  validatePassword = password => {\n    let error;\n\n    if (!password) {\n      error = \"Please enter your password\";\n    } else if (password.length < 9) {\n      error = \"Password should have at least 8 characters\";\n    }\n\n    return error;\n  };\n\n  validateMatchPasswords = values => {\n    let error;\n\n    if (values.match_password !== values.password) {\n      error = \"Passwords should match\";\n    }\n\n    return error;\n  };\n\n  doLogout = $event => {\n    if ($event) {\n      $event.preventDefault();\n    }\n\n    this.props.logoutUser(this.props.history);\n  };\n\n  onClose = avatar => {\n    this.setState({\n      avatar,\n      open_avatar_loader: false\n    });\n  };\n\n  onCrop = avatarBase64 => {\n    const dataURLtoFile = (dataurl, filename) => {\n      const arr = dataurl.split(\",\");\n      const mime = arr[0].match(/:(.*?);/)[1];\n      const bstr = atob(arr[1]);\n      let n = bstr.length;\n      const u8arr = new Uint8Array(n);\n\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n\n      return new File([u8arr], `${filename}${mime.replace(/^.+\\//, \".\")}`, {\n        type: mime\n      });\n    };\n\n    const avatar = dataURLtoFile(avatarBase64, \"avatar\");\n\n    if (avatar) {\n      this.setState({ avatar: \"\" });\n    }\n  };\n\n  onBeforeFileLoad = elem => {\n    if (elem.target.files[0].size > 2e7) {\n      elem.target.value = \"\";\n    }\n  };\n\n  openAvatarLoader = $event => {\n    this.setState({ open_avatar_loader: true });\n\n    window.setTimeout(() => {\n      const avatarLoader = document.querySelector(\n        'label[for^=\"avatar_loader\"]'\n      );\n\n      if (avatarLoader) {\n        avatarLoader.click();\n      }\n    }, 0);\n  };\n\n  render() {\n    const phoneNumberMask = [\n      \"+\",\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      \" \",\n      \"(\",\n      /\\d/,\n      /\\d/,\n      \")\",\n      \" \",\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      \" \",\n      /\\d/,\n      /\\d/,\n      \" \",\n      /\\d/,\n      /\\d/\n    ];\n    const {\n      avatar,\n      first_name,\n      last_name,\n      birth_date,\n      gender,\n      phone_number,\n      password,\n      match_password,\n      preview,\n      open_avatar_loader\n    } = this.state;\n    const initialValues = {\n      avatar,\n      first_name,\n      last_name,\n      birth_date,\n      gender,\n      phone_number: conformToMask(phone_number, phoneNumberMask, {\n        guide: false\n      }).conformedValue,\n      password,\n      match_password,\n      preview,\n      open_avatar_loader\n    };\n\n    // console.log(\"this.state: \", this.state);\n\n    return (\n      <Row className=\"h-100\">\n        <Colxx\n          xxs=\"12\"\n          xs=\"12\"\n          sm=\"12\"\n          md=\"10\"\n          lg=\"8\"\n          xl=\"8\"\n          xxl=\"6\"\n          className=\"mx-auto my-auto\"\n        >\n          <Card className=\"auth-card text-center\">\n            {/* <div className=\"position-relative image-side \">\n              <p className=\"text-white h2\">MAGIC IS IN THE DETAILS</p>\n              <p className=\"white mb-0\">\n                To create a caregiver or doctor profile, please type in your\n                information.\n              </p>\n            </div> */}\n            <div className=\"form-side\">\n              <NavLink to={`/`} className=\"white\">\n                <span className=\"logo-single\" />\n              </NavLink>\n              <CardTitle className=\"mb-4\">\n                <IntlMessages id=\"user.create-profile\" />\n              </CardTitle>\n\n              <Formik\n                enableReinitialize={true}\n                initialValues={initialValues}\n                onSubmit={this.onCreateProfile}\n              >\n                {({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSelect,\n                  setFieldValue\n                }) => (\n                  <Form className=\"av-tooltip tooltip-label-bottom\">\n                    <FormGroup\n                      className=\"form-group has-float-label\"\n                      style={{ height: \"200px\" }}\n                    >\n                      <Field name=\"avatar\">\n                        {({ field }) => (\n                          <Fragment>\n                            <Preview\n                              alt={`${first_name} ${last_name}`}\n                              src={preview}\n                              style={{\n                                cursor: \"pointer\",\n                                width: \"200px\",\n                                height: \"200px\",\n                                position: open_avatar_loader\n                                  ? \"fixed\"\n                                  : \"static\",\n                                left: open_avatar_loader ? \"-9999px\" : \"0\"\n                              }}\n                              className=\"mx-auto my-auto\"\n                              onClick={this.openAvatarLoader}\n                            />\n                            <div\n                              style={{\n                                position: !open_avatar_loader\n                                  ? \"fixed\"\n                                  : \"static\",\n                                left: !open_avatar_loader ? \"-9999px\" : \"0\"\n                              }}\n                            >\n                              <Avatar\n                                {...field}\n                                width={\"100%\"}\n                                height={200}\n                                onCrop={this.onCrop}\n                                onClose={this.onClose}\n                                onBeforeFileLoad={this.onBeforeFileLoad}\n                                onFileLoad={this.onAvatarLoad}\n                                src={preview}\n                                borderStyle={{\n                                  borderWidth: \"0px\",\n                                  borderStyle: \"solid\",\n                                  borderColor: \"#d7d7d7\"\n                                }}\n                                labelStyle={{\n                                  textIndent: \"-26px\",\n                                  width: \"100%\"\n                                }}\n                                label={\"Please select avatar\"}\n                              />\n                            </div>\n                          </Fragment>\n                        )}\n                      </Field>\n                    </FormGroup>\n\n                    <FormGroup className=\"form-group has-float-label\">\n                      <Label>\n                        <IntlMessages id=\"user.first-name\" />\n                      </Label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"first_name\"\n                        type=\"text\"\n                        validate={this.validateFirstName}\n                        // value={values.first_name}\n                        // onChange={this.updateData}\n                        // onBlur={handleBlur}\n                      />\n                      {errors.first_name && touched.first_name && (\n                        <div className=\"invalid-feedback d-block\">\n                          {errors.first_name}\n                        </div>\n                      )}\n                    </FormGroup>\n\n                    <FormGroup className=\"form-group has-float-label\">\n                      <Label>\n                        <IntlMessages id=\"user.last-name\" />\n                      </Label>\n                      <Field\n                        className=\"form-control\"\n                        type=\"text\"\n                        name=\"last_name\"\n                        // value={values.last_name}\n                        // onBlur={handleBlur}\n                        // onChange={handleChange}\n                      />\n                      {errors.last_name && touched.last_name && (\n                        <div className=\"invalid-feedback d-block\">\n                          {errors.last_name}\n                        </div>\n                      )}\n                    </FormGroup>\n\n                    <FormGroup className=\"form-group has-float-label\">\n                      <Label>\n                        <IntlMessages id=\"user.birth-date\" />\n                      </Label>\n                      <Field name=\"birth_date\" autocomplete=\"off\">\n                        {({ field }) => (\n                          <DatePicker\n                            {...field}\n                            className=\"form-control\"\n                            selected={values.birth_date}\n                            onBlur={handleBlur}\n                            onSelect={handleSelect}\n                            onChange={date => setFieldValue(\"birth_date\", date)}\n                            dateFormat=\"MM/dd/yyyy\"\n                          />\n                        )}\n                      </Field>\n                      {errors.birth_date && touched.birth_date && (\n                        <div className=\"invalid-feedback d-block\">\n                          {errors.birth_date}\n                        </div>\n                      )}\n                    </FormGroup>\n\n                    <FormGroup className=\"form-group has-float-label\">\n                      <Label>\n                        <IntlMessages id=\"user.gender\" />\n                      </Label>\n                      <Field name=\"gender\">\n                        {({ field }) => (\n                          <select\n                            {...field}\n                            className=\"form-control\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            style={{\n                              height: \"45px\",\n                              textIndent: \"5px\"\n                            }}\n                          >\n                            <option value=\"\" label=\"Select a geneder\" />\n                            <option value=\"MALE\" label=\"Male\" />\n                            <option value=\"FEMALE\" label=\"Female\" />\n                            <option value=\"\" label=\"Other\" />\n                          </select>\n                        )}\n                      </Field>\n                      {errors.gender && touched.gender && (\n                        <div className=\"invalid-feedback d-block\">\n                          {errors.gender}\n                        </div>\n                      )}\n                    </FormGroup>\n\n                    {/* <FormGroup className=\"form-group has-float-label\">\n                      <Label>\n                        <IntlMessages id=\"user.email\" />\n                      </Label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"email\"\n                        validate={this.validateEmail}\n                      />\n                      {errors.email && touched.email && (\n                        <div className=\"invalid-feedback d-block\">\n                          {errors.email}\n                        </div>\n                      )}\n                    </FormGroup> */}\n\n                    <FormGroup className=\"form-group has-float-label\">\n                      <Label>\n                        <IntlMessages id=\"user.phone-number\" />\n                      </Label>\n                      <Field name=\"phone_number\">\n                        {({ field }) => (\n                          <MaskedInput\n                            {...field}\n                            className=\"form-control\"\n                            id=\"phone_number\"\n                            placeholder=\"+000 (00) 000 00 00\"\n                            type=\"text\"\n                            mask={phoneNumberMask}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            disabled={true}\n                          />\n                        )}\n                      </Field>\n\n                      {errors.phone_number && touched.phone_number && (\n                        <div className=\"invalid-feedback d-block\">\n                          {errors.phone_number}\n                        </div>\n                      )}\n                    </FormGroup>\n\n                    <FormGroup className=\"form-group has-float-label\">\n                      <Label>\n                        <IntlMessages id=\"user.password\" />\n                      </Label>\n                      {this.props.password}\n                      <Field\n                        className=\"form-control\"\n                        type=\"password\"\n                        name=\"password\"\n                        validate={this.validatePassword}\n                        // value={values.password}\n                        // onChange={handleChange}\n                        // onBlur={handleBlur}\n                      />\n                      {errors.password && touched.password && (\n                        <div className=\"invalid-feedback d-block\">\n                          {errors.password}\n                        </div>\n                      )}\n                    </FormGroup>\n\n                    <FormGroup className=\"form-group has-float-label\">\n                      <Label>\n                        <IntlMessages id=\"user.re-password\" />\n                      </Label>\n                      {this.props.match_password}\n                      <Field\n                        className=\"form-control\"\n                        type=\"password\"\n                        name=\"match_password\"\n                        validate={this.validateMatchPasswords.bind(\n                          this,\n                          values\n                        )}\n                        // value={values.match_password}\n                        // onChange={handleChange}\n                        // onBlur={handleBlur}\n                      />\n                      {errors.match_password && touched.match_password && (\n                        <div className=\"invalid-feedback d-block\">\n                          {errors.match_password}\n                        </div>\n                      )}\n                    </FormGroup>\n\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                      <a href=\"/\" onClick={this.doLogout} className={\"btn p-0\"}>\n                        <IntlMessages id=\"user.logout\" />\n                      </a>\n                      <Button\n                        color=\"primary\"\n                        className={`btn-shadow btn-multiple-state ${\n                          this.props.loading ? \"show-spinner\" : \"\"\n                        }`}\n                        size=\"lg\"\n                        type=\"submit\"\n                        disabled={\n                          this.props.loading ||\n                          !(\n                            values.password &&\n                            values.match_password &&\n                            values.first_name &&\n                            values.phone_number\n                          )\n                        }\n                      >\n                        <span className=\"spinner d-inline-block\">\n                          <span className=\"bounce1\" />\n                          <span className=\"bounce2\" />\n                          <span className=\"bounce3\" />\n                        </span>\n                        <span className=\"label\">\n                          <IntlMessages id=\"user.create-profile\" />\n                        </span>\n                      </Button>\n                    </div>\n                  </Form>\n                )}\n              </Formik>\n            </div>\n          </Card>\n        </Colxx>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = ({ authUser }) => {\n  const {\n    user,\n    loading,\n    error,\n    activeVerificationCode,\n    profile: { phone_number, first_name, last_name, birth_date, gender, id }\n  } = authUser;\n\n  return {\n    user,\n    loading,\n    error,\n    activeVerificationCode,\n    phone_number,\n    first_name,\n    last_name,\n    birth_date: new Date(birth_date || null),\n    gender,\n    id\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProfile,\n  updateProfile,\n  logoutUser\n})(CreateProfile);\n"],"sourceRoot":""}