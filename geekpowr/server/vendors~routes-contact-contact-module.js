exports.ids=[9],exports.modules={pxUr:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",function(){return AgmCoreModule}),__webpack_require__.d(__webpack_exports__,"b",function(){return agm_core_AgmInfoWindow}),__webpack_require__.d(__webpack_exports__,"c",function(){return agm_core_AgmMap}),__webpack_require__.d(__webpack_exports__,"d",function(){return agm_core_AgmMarker});var tslib=__webpack_require__("zOht"),core=__webpack_require__("fXoL"),Observable=__webpack_require__("HDdC"),BehaviorSubject=__webpack_require__("2Vo4"),from=__webpack_require__("Cfvw"),scheduler_async=__webpack_require__("D0XW"),isArray=__webpack_require__("DH7j");function isNumeric(val){return!Object(isArray.a)(val)&&val-parseFloat(val)+1>=0}var isScheduler=__webpack_require__("z+Ro");function dispatch(state){const{index:index,period:period,subscriber:subscriber}=state;if(subscriber.next(index),!subscriber.closed){if(-1===period)return subscriber.complete();state.index=index+1,this.schedule(state,period)}}var Subject=__webpack_require__("XNiG"),AsyncAction=__webpack_require__("3N8a");class QueueAction_QueueAction extends AsyncAction.a{constructor(scheduler,work){super(scheduler,work),this.scheduler=scheduler,this.work=work}schedule(state,delay=0){return delay>0?super.schedule(state,delay):(this.delay=delay,this.state=state,this.scheduler.flush(this),this)}execute(state,delay){return delay>0||this.closed?super.execute(state,delay):this._execute(state,delay)}requestAsyncId(scheduler,id,delay=0){return null!==delay&&delay>0||null===delay&&this.delay>0?super.requestAsyncId(scheduler,id,delay):scheduler.flush(this)}}var AsyncScheduler=__webpack_require__("IjjT");class QueueScheduler_QueueScheduler extends AsyncScheduler.a{}const queue=new QueueScheduler_QueueScheduler(QueueAction_QueueAction);var Subscription=__webpack_require__("quSY"),Subscriber=__webpack_require__("7o/Q"),Notification=__webpack_require__("WMd4");class observeOn_ObserveOnSubscriber extends Subscriber.a{constructor(destination,scheduler,delay=0){super(destination),this.scheduler=scheduler,this.delay=delay}static dispatch(arg){const{notification:notification,destination:destination}=arg;notification.observe(destination),this.unsubscribe()}scheduleMessage(notification){this.destination.add(this.scheduler.schedule(observeOn_ObserveOnSubscriber.dispatch,this.delay,new ObserveOnMessage(notification,this.destination)))}_next(value){this.scheduleMessage(Notification.a.createNext(value))}_error(err){this.scheduleMessage(Notification.a.createError(err)),this.unsubscribe()}_complete(){this.scheduleMessage(Notification.a.createComplete()),this.unsubscribe()}}class ObserveOnMessage{constructor(notification,destination){this.notification=notification,this.destination=destination}}var ObjectUnsubscribedError=__webpack_require__("9ppp"),SubjectSubscription=__webpack_require__("Ylt2");class ReplaySubject_ReplaySubject extends Subject.a{constructor(bufferSize=Number.POSITIVE_INFINITY,windowTime=Number.POSITIVE_INFINITY,scheduler){super(),this.scheduler=scheduler,this._events=[],this._infiniteTimeWindow=!1,this._bufferSize=bufferSize<1?1:bufferSize,this._windowTime=windowTime<1?1:windowTime,windowTime===Number.POSITIVE_INFINITY?(this._infiniteTimeWindow=!0,this.next=this.nextInfiniteTimeWindow):this.next=this.nextTimeWindow}nextInfiniteTimeWindow(value){if(!this.isStopped){const _events=this._events;_events.push(value),_events.length>this._bufferSize&&_events.shift()}super.next(value)}nextTimeWindow(value){this.isStopped||(this._events.push(new ReplayEvent(this._getNow(),value)),this._trimBufferThenGetEvents()),super.next(value)}_subscribe(subscriber){const _infiniteTimeWindow=this._infiniteTimeWindow,_events=_infiniteTimeWindow?this._events:this._trimBufferThenGetEvents(),scheduler=this.scheduler,len=_events.length;let subscription;if(this.closed)throw new ObjectUnsubscribedError.a;if(this.isStopped||this.hasError?subscription=Subscription.a.EMPTY:(this.observers.push(subscriber),subscription=new SubjectSubscription.a(this,subscriber)),scheduler&&subscriber.add(subscriber=new observeOn_ObserveOnSubscriber(subscriber,scheduler)),_infiniteTimeWindow)for(let i=0;i<len&&!subscriber.closed;i++)subscriber.next(_events[i]);else for(let i=0;i<len&&!subscriber.closed;i++)subscriber.next(_events[i].value);return this.hasError?subscriber.error(this.thrownError):this.isStopped&&subscriber.complete(),subscription}_getNow(){return(this.scheduler||queue).now()}_trimBufferThenGetEvents(){const now=this._getNow(),_bufferSize=this._bufferSize,_windowTime=this._windowTime,_events=this._events,eventsCount=_events.length;let spliceCount=0;for(;spliceCount<eventsCount&&!(now-_events[spliceCount].time<_windowTime);)spliceCount++;return eventsCount>_bufferSize&&(spliceCount=Math.max(spliceCount,eventsCount-_bufferSize)),spliceCount>0&&_events.splice(0,spliceCount),_events}}class ReplayEvent{constructor(time,value){this.time=time,this.value=value}}class AsyncSubject_AsyncSubject extends Subject.a{constructor(){super(...arguments),this.value=null,this.hasNext=!1,this.hasCompleted=!1}_subscribe(subscriber){return this.hasError?(subscriber.error(this.thrownError),Subscription.a.EMPTY):this.hasCompleted&&this.hasNext?(subscriber.next(this.value),subscriber.complete(),Subscription.a.EMPTY):super._subscribe(subscriber)}next(value){this.hasCompleted||(this.value=value,this.hasNext=!0)}error(error){this.hasCompleted||super.error(error)}complete(){this.hasCompleted=!0,this.hasNext&&super.next(this.value),super.complete()}}var map=__webpack_require__("lJxs"),canReportError=__webpack_require__("8Qeq");function bindCallback(callbackFunc,resultSelector,scheduler){if(resultSelector){if(!Object(isScheduler.a)(resultSelector))return(...args)=>bindCallback(callbackFunc,scheduler)(...args).pipe(Object(map.a)(args=>Object(isArray.a)(args)?resultSelector(...args):resultSelector(args)));scheduler=resultSelector}return function(...args){const context=this;let subject;const params={context:context,subject:subject,callbackFunc:callbackFunc,scheduler:scheduler};return new Observable.a(subscriber=>{if(scheduler){const state={args:args,subscriber:subscriber,params:params};return scheduler.schedule(bindCallback_dispatch,0,state)}if(!subject){subject=new AsyncSubject_AsyncSubject;const handler=(...innerArgs)=>{subject.next(innerArgs.length<=1?innerArgs[0]:innerArgs),subject.complete()};try{callbackFunc.apply(context,[...args,handler])}catch(err){Object(canReportError.a)(subject)?subject.error(err):console.warn(err)}}return subject.subscribe(subscriber)})}}function bindCallback_dispatch(state){const{args:args,subscriber:subscriber,params:params}=state,{callbackFunc:callbackFunc,context:context,scheduler:scheduler}=params;let{subject:subject}=params;if(!subject){subject=params.subject=new AsyncSubject_AsyncSubject;const handler=(...innerArgs)=>{const value=innerArgs.length<=1?innerArgs[0]:innerArgs;this.add(scheduler.schedule(dispatchNext,0,{value:value,subject:subject}))};try{callbackFunc.apply(context,[...args,handler])}catch(err){subject.error(err)}}this.add(subject.subscribe(subscriber))}function dispatchNext(state){const{value:value,subject:subject}=state;subject.next(value),subject.complete()}var of=__webpack_require__("LRne"),throwError=__webpack_require__("z6cu"),isFunction=__webpack_require__("n6bG");function fromEventPattern(addHandler,removeHandler,resultSelector){return resultSelector?fromEventPattern(addHandler,removeHandler).pipe(Object(map.a)(args=>Object(isArray.a)(args)?resultSelector(...args):resultSelector(args))):new Observable.a(subscriber=>{const handler=(...e)=>subscriber.next(1===e.length?e[0]:e);let retValue;try{retValue=addHandler(handler)}catch(err){return void subscriber.error(err)}if(Object(isFunction.a)(removeHandler))return()=>removeHandler(handler,retValue)})}var merge=__webpack_require__("VRyK"),mergeMap=__webpack_require__("5+tZ"),innerSubscribe=__webpack_require__("zx2A");class sample_SampleOperator{constructor(notifier){this.notifier=notifier}call(subscriber,source){const sampleSubscriber=new sample_SampleSubscriber(subscriber),subscription=source.subscribe(sampleSubscriber);return subscription.add(Object(innerSubscribe.c)(this.notifier,new innerSubscribe.a(sampleSubscriber))),subscription}}class sample_SampleSubscriber extends innerSubscribe.b{constructor(){super(...arguments),this.hasValue=!1}_next(value){this.value=value,this.hasValue=!0}notifyNext(){this.emitValue()}notifyComplete(){this.emitValue()}emitValue(){this.hasValue&&(this.hasValue=!1,this.destination.next(this.value))}}var switchMap=__webpack_require__("eIep");function shareReplay(configOrBufferSize,windowTime,scheduler){let config;return config=configOrBufferSize&&"object"==typeof configOrBufferSize?configOrBufferSize:{bufferSize:configOrBufferSize,windowTime:windowTime,refCount:!1,scheduler:scheduler},source=>source.lift(function shareReplayOperator({bufferSize:bufferSize=Number.POSITIVE_INFINITY,windowTime:windowTime=Number.POSITIVE_INFINITY,refCount:useRefCount,scheduler:scheduler}){let subject,subscription,refCount=0,hasError=!1,isComplete=!1;return function shareReplayOperation(source){let innerSub;refCount++,!subject||hasError?(hasError=!1,subject=new ReplaySubject_ReplaySubject(bufferSize,windowTime,scheduler),innerSub=subject.subscribe(this),subscription=source.subscribe({next(value){subject.next(value)},error(err){hasError=!0,subject.error(err)},complete(){isComplete=!0,subscription=void 0,subject.complete()}})):innerSub=subject.subscribe(this),this.add(()=>{refCount--,innerSub.unsubscribe(),subscription&&!isComplete&&useRefCount&&0===refCount&&(subscription.unsubscribe(),subscription=void 0,subject=void 0)})}}(config))}var multicast=__webpack_require__("oB13"),startWith=__webpack_require__("JX91");class SkipOperator{constructor(total){this.total=total}call(subscriber,source){return source.subscribe(new skip_SkipSubscriber(subscriber,this.total))}}class skip_SkipSubscriber extends Subscriber.a{constructor(destination,total){super(destination),this.total=total,this.count=0}_next(x){++this.count>this.total&&this.destination.next(x)}}class DistinctUntilChangedOperator{constructor(compare,keySelector){this.compare=compare,this.keySelector=keySelector}call(subscriber,source){return source.subscribe(new distinctUntilChanged_DistinctUntilChangedSubscriber(subscriber,this.compare,this.keySelector))}}class distinctUntilChanged_DistinctUntilChangedSubscriber extends Subscriber.a{constructor(destination,compare,keySelector){super(destination),this.keySelector=keySelector,this.hasKey=!1,"function"==typeof compare&&(this.compare=compare)}compare(x,y){return x===y}_next(value){let key;try{const{keySelector:keySelector}=this;key=keySelector?keySelector(value):value}catch(err){return this.destination.error(err)}let result=!1;if(this.hasKey)try{const{compare:compare}=this;result=compare(this.key,key)}catch(err){return this.destination.error(err)}else this.hasKey=!0;result||(this.key=key,this.destination.next(value))}}class takeUntil_TakeUntilOperator{constructor(notifier){this.notifier=notifier}call(subscriber,source){const takeUntilSubscriber=new takeUntil_TakeUntilSubscriber(subscriber),notifierSubscription=Object(innerSubscribe.c)(this.notifier,new innerSubscribe.a(takeUntilSubscriber));return notifierSubscription&&!takeUntilSubscriber.seenValue?(takeUntilSubscriber.add(notifierSubscription),source.subscribe(takeUntilSubscriber)):takeUntilSubscriber}}class takeUntil_TakeUntilSubscriber extends innerSubscribe.b{constructor(destination){super(destination),this.seenValue=!1}notifyNext(){this.seenValue=!0,this.complete()}notifyComplete(){}}var common=__webpack_require__("ofXK");const _c0=["*"];class MapsAPILoader{}MapsAPILoader.\u0275fac=function MapsAPILoader_Factory(t){return new(t||MapsAPILoader)},MapsAPILoader.\u0275prov=core.Ec({token:MapsAPILoader,factory:MapsAPILoader.\u0275fac});class agm_core_GoogleMapsAPIWrapper{constructor(_loader,_zone){this._loader=_loader,this._zone=_zone,this._map=new Promise(resolve=>{this._mapResolver=resolve})}createMap(el,mapOptions){return this._zone.runOutsideAngular(()=>this._loader.load().then(()=>{const map=new google.maps.Map(el,mapOptions);this._mapResolver(map)}))}setMapOptions(options){return this._zone.runOutsideAngular(()=>{this._map.then(m=>{m.setOptions(options)})})}createMarker(options={},addToMap=!0){return this._zone.runOutsideAngular(()=>this._map.then(map=>(addToMap&&(options.map=map),new google.maps.Marker(options))))}createInfoWindow(options){return this._zone.runOutsideAngular(()=>this._map.then(()=>new google.maps.InfoWindow(options)))}createCircle(options){return this._zone.runOutsideAngular(()=>this._map.then(map=>(options.map=map,new google.maps.Circle(options))))}createRectangle(options){return this._zone.runOutsideAngular(()=>this._map.then(map=>(options.map=map,new google.maps.Rectangle(options))))}createPolyline(options){return this._zone.runOutsideAngular(()=>this.getNativeMap().then(map=>{const line=new google.maps.Polyline(options);return line.setMap(map),line}))}createPolygon(options){return this._zone.runOutsideAngular(()=>this.getNativeMap().then(map=>{const polygon=new google.maps.Polygon(options);return polygon.setMap(map),polygon}))}createDataLayer(options){return this._zone.runOutsideAngular(()=>this._map.then(m=>{const data=new google.maps.Data(options);return data.setMap(m),data}))}createTransitLayer(){return this._zone.runOutsideAngular(()=>this._map.then(map=>{const newLayer=new google.maps.TransitLayer;return newLayer.setMap(map),newLayer}))}createBicyclingLayer(){return this._zone.runOutsideAngular(()=>this._map.then(map=>{const newLayer=new google.maps.BicyclingLayer;return newLayer.setMap(map),newLayer}))}containsLocation(latLng,polygon){return this._map.then(()=>google.maps.geometry.poly.containsLocation(latLng,polygon))}subscribeToMapEvent(eventName){return new Observable.a(observer=>{this._map.then(m=>m.addListener(eventName,()=>this._zone.run(()=>observer.next(arguments[0]))))})}clearInstanceListeners(){return this._zone.runOutsideAngular(()=>{this._map.then(map=>{google.maps.event.clearInstanceListeners(map)})})}setCenter(latLng){return this._zone.runOutsideAngular(()=>this._map.then(map=>map.setCenter(latLng)))}getZoom(){return this._zone.runOutsideAngular(()=>this._map.then(map=>map.getZoom()))}getBounds(){return this._zone.runOutsideAngular(()=>this._map.then(map=>map.getBounds()))}getMapTypeId(){return this._zone.runOutsideAngular(()=>this._map.then(map=>map.getMapTypeId()))}setZoom(zoom){return this._zone.runOutsideAngular(()=>this._map.then(map=>map.setZoom(zoom)))}getCenter(){return this._zone.runOutsideAngular(()=>this._map.then(map=>map.getCenter()))}panTo(latLng){return this._zone.runOutsideAngular(()=>this._map.then(map=>map.panTo(latLng)))}panBy(x,y){return this._zone.runOutsideAngular(()=>this._map.then(map=>map.panBy(x,y)))}fitBounds(latLng,padding){return this._zone.runOutsideAngular(()=>this._map.then(map=>map.fitBounds(latLng,padding)))}panToBounds(latLng,padding){return this._zone.runOutsideAngular(()=>this._map.then(map=>map.panToBounds(latLng,padding)))}getNativeMap(){return this._map}triggerMapEvent(eventName){return this._map.then(m=>google.maps.event.trigger(m,eventName))}}agm_core_GoogleMapsAPIWrapper.\u0275fac=function GoogleMapsAPIWrapper_Factory(t){return new(t||agm_core_GoogleMapsAPIWrapper)(core.Rc(MapsAPILoader),core.Rc(core.P))},agm_core_GoogleMapsAPIWrapper.\u0275prov=core.Ec({token:agm_core_GoogleMapsAPIWrapper,factory:agm_core_GoogleMapsAPIWrapper.\u0275fac}),agm_core_GoogleMapsAPIWrapper.ctorParameters=()=>[{type:MapsAPILoader},{type:core.P}];class agm_core_CircleManager{constructor(_apiWrapper,_zone){this._apiWrapper=_apiWrapper,this._zone=_zone,this._circles=new Map}addCircle(circle){this._apiWrapper.getNativeMap().then(()=>this._circles.set(circle,this._apiWrapper.createCircle({center:{lat:circle.latitude,lng:circle.longitude},clickable:circle.clickable,draggable:circle.draggable,editable:circle.editable,fillColor:circle.fillColor,fillOpacity:circle.fillOpacity,radius:circle.radius,strokeColor:circle.strokeColor,strokeOpacity:circle.strokeOpacity,strokePosition:google.maps.StrokePosition[circle.strokePosition],strokeWeight:circle.strokeWeight,visible:circle.visible,zIndex:circle.zIndex})))}removeCircle(circle){return this._circles.get(circle).then(c=>{c.setMap(null),this._circles.delete(circle)})}setOptions(circle,options){return Object(tslib.__awaiter)(this,void 0,void 0,function*(){return this._circles.get(circle).then(c=>{const actualParam=options.strokePosition;options.strokePosition=google.maps.StrokePosition[actualParam],c.setOptions(options)})})}getBounds(circle){return this._circles.get(circle).then(c=>c.getBounds())}getCenter(circle){return this._circles.get(circle).then(c=>c.getCenter())}getRadius(circle){return this._circles.get(circle).then(c=>c.getRadius())}setCenter(circle){return this._circles.get(circle).then(c=>c.setCenter({lat:circle.latitude,lng:circle.longitude}))}setEditable(circle){return this._circles.get(circle).then(c=>c.setEditable(circle.editable))}setDraggable(circle){return this._circles.get(circle).then(c=>c.setDraggable(circle.draggable))}setVisible(circle){return this._circles.get(circle).then(c=>c.setVisible(circle.visible))}setRadius(circle){return this._circles.get(circle).then(c=>c.setRadius(circle.radius))}getNativeCircle(circle){return this._circles.get(circle)}createEventObservable(eventName,circle){return new Observable.a(observer=>{let listener=null;return this._circles.get(circle).then(c=>{listener=c.addListener(eventName,e=>this._zone.run(()=>observer.next(e)))}),()=>{null!==listener&&listener.remove()}})}}agm_core_CircleManager.\u0275fac=function CircleManager_Factory(t){return new(t||agm_core_CircleManager)(core.Rc(agm_core_GoogleMapsAPIWrapper),core.Rc(core.P))},agm_core_CircleManager.\u0275prov=core.Ec({token:agm_core_CircleManager,factory:agm_core_CircleManager.\u0275fac}),agm_core_CircleManager.ctorParameters=()=>[{type:agm_core_GoogleMapsAPIWrapper},{type:core.P}];class agm_core_DataLayerManager{constructor(_wrapper,_zone){this._wrapper=_wrapper,this._zone=_zone,this._layers=new Map}addDataLayer(layer){const newLayer=this._wrapper.createDataLayer({style:layer.style}).then(d=>(layer.geoJson&&this.getDataFeatures(d,layer.geoJson).then(features=>d.features=features),d));this._layers.set(layer,newLayer)}deleteDataLayer(layer){this._layers.get(layer).then(l=>{l.setMap(null),this._layers.delete(layer)})}updateGeoJson(layer,geoJson){this._layers.get(layer).then(l=>{l.forEach(feature=>{l.remove(feature);const index=l.features.indexOf(feature,0);index>-1&&l.features.splice(index,1)}),this.getDataFeatures(l,geoJson).then(features=>l.features=features)})}setDataOptions(layer,options){this._layers.get(layer).then(l=>{l.setControlPosition(options.controlPosition),l.setControls(options.controls),l.setDrawingMode(options.drawingMode),l.setStyle(options.style)})}createEventObservable(eventName,layer){return new Observable.a(observer=>{this._layers.get(layer).then(d=>{d.addListener(eventName,e=>this._zone.run(()=>observer.next(e)))})})}getDataFeatures(d,geoJson){return new Promise((resolve,reject)=>{if("object"==typeof geoJson)try{resolve(d.addGeoJson(geoJson))}catch(e){reject(e)}else"string"==typeof geoJson?d.loadGeoJson(geoJson,null,resolve):reject("Impossible to extract features from geoJson: wrong argument type")})}}agm_core_DataLayerManager.\u0275fac=function DataLayerManager_Factory(t){return new(t||agm_core_DataLayerManager)(core.Rc(agm_core_GoogleMapsAPIWrapper),core.Rc(core.P))},agm_core_DataLayerManager.\u0275prov=core.Ec({token:agm_core_DataLayerManager,factory:agm_core_DataLayerManager.\u0275fac}),agm_core_DataLayerManager.ctorParameters=()=>[{type:agm_core_GoogleMapsAPIWrapper},{type:core.P}];class FitBoundsAccessor{}class agm_core_FitBoundsService{constructor(loader){this._boundsChangeSampleTime$=new BehaviorSubject.a(200),this._includeInBounds$=new BehaviorSubject.a(new Map),this.bounds$=Object(from.a)(loader.load()).pipe(Object(mergeMap.a)(()=>this._includeInBounds$),function sample(notifier){return source=>source.lift(new sample_SampleOperator(notifier))}(this._boundsChangeSampleTime$.pipe(Object(switchMap.a)(time=>function timer(dueTime=0,periodOrScheduler,scheduler){let period=-1;return isNumeric(periodOrScheduler)?period=Number(periodOrScheduler)<1?1:Number(periodOrScheduler):Object(isScheduler.a)(periodOrScheduler)&&(scheduler=periodOrScheduler),Object(isScheduler.a)(scheduler)||(scheduler=scheduler_async.a),new Observable.a(subscriber=>{const due=isNumeric(dueTime)?dueTime:+dueTime-scheduler.now();return scheduler.schedule(dispatch,due,{index:0,period:period,subscriber:subscriber})})}(0,time)))),Object(map.a)(includeInBounds=>this._generateBounds(includeInBounds)),shareReplay(1))}_generateBounds(includeInBounds){const bounds=new google.maps.LatLngBounds;return includeInBounds.forEach(b=>bounds.extend(b)),bounds}addToBounds(latLng){const id=this._createIdentifier(latLng);if(this._includeInBounds$.value.has(id))return;const boundsMap=this._includeInBounds$.value;boundsMap.set(id,latLng),this._includeInBounds$.next(boundsMap)}removeFromBounds(latLng){const boundsMap=this._includeInBounds$.value;boundsMap.delete(this._createIdentifier(latLng)),this._includeInBounds$.next(boundsMap)}changeFitBoundsChangeSampleTime(timeMs){this._boundsChangeSampleTime$.next(timeMs)}getBounds$(){return this.bounds$}_createIdentifier(latLng){return`${latLng.lat}+${latLng.lng}`}}agm_core_FitBoundsService.\u0275fac=function FitBoundsService_Factory(t){return new(t||agm_core_FitBoundsService)(core.Rc(MapsAPILoader))},agm_core_FitBoundsService.\u0275prov=core.Ec({token:agm_core_FitBoundsService,factory:agm_core_FitBoundsService.\u0275fac}),agm_core_FitBoundsService.ctorParameters=()=>[{type:MapsAPILoader}];class agm_core_AgmGeocoder{constructor(loader){const connectableGeocoder$=new Observable.a(subscriber=>{loader.load().then(()=>subscriber.next())}).pipe(Object(map.a)(()=>this._createGeocoder()),Object(multicast.a)(new ReplaySubject_ReplaySubject(1)));connectableGeocoder$.connect(),this.geocoder$=connectableGeocoder$}geocode(request){return this.geocoder$.pipe(Object(switchMap.a)(geocoder=>this._getGoogleResults(geocoder,request)))}_getGoogleResults(geocoder,request){return bindCallback(geocoder.geocode)(request).pipe(Object(switchMap.a)(([results,status])=>status===google.maps.GeocoderStatus.OK?Object(of.a)(results):Object(throwError.a)(status)))}_createGeocoder(){return new google.maps.Geocoder}}agm_core_AgmGeocoder.\u0275fac=function AgmGeocoder_Factory(t){return new(t||agm_core_AgmGeocoder)(core.Rc(MapsAPILoader))},agm_core_AgmGeocoder.\u0275prov=Object(core.Ec)({factory:function AgmGeocoder_Factory(){return new agm_core_AgmGeocoder(Object(core.Rc)(MapsAPILoader))},token:agm_core_AgmGeocoder,providedIn:"root"}),agm_core_AgmGeocoder.ctorParameters=()=>[{type:MapsAPILoader}];class WindowRef{getNativeWindow(){return window}}class DocumentRef{getNativeDocument(){return document}}const BROWSER_GLOBALS_PROVIDERS=[WindowRef,DocumentRef];var GoogleMapsScriptProtocol;!function(GoogleMapsScriptProtocol){GoogleMapsScriptProtocol[GoogleMapsScriptProtocol.HTTP=1]="HTTP",GoogleMapsScriptProtocol[GoogleMapsScriptProtocol.HTTPS=2]="HTTPS",GoogleMapsScriptProtocol[GoogleMapsScriptProtocol.AUTO=3]="AUTO"}(GoogleMapsScriptProtocol||(GoogleMapsScriptProtocol={}));const LAZY_MAPS_API_CONFIG=new core.D("angular-google-maps LAZY_MAPS_API_CONFIG");class LazyMapsAPILoader extends MapsAPILoader{constructor(config=null,w,d,localeId){super(),this.localeId=localeId,this._SCRIPT_ID="agmGoogleMapsApiScript",this.callbackName="agmLazyMapsAPILoader",this._config=config||{},this._windowRef=w,this._documentRef=d}load(){const window=this._windowRef.getNativeWindow();if(window.google&&window.google.maps)return Promise.resolve();if(this._scriptLoadingPromise)return this._scriptLoadingPromise;const scriptOnPage=this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);if(scriptOnPage)return this._assignScriptLoadingPromise(scriptOnPage),this._scriptLoadingPromise;const script=this._documentRef.getNativeDocument().createElement("script");return script.type="text/javascript",script.async=!0,script.defer=!0,script.id=this._SCRIPT_ID,script.src=this._getScriptSrc(this.callbackName),this._assignScriptLoadingPromise(script),this._documentRef.getNativeDocument().body.appendChild(script),this._scriptLoadingPromise}_assignScriptLoadingPromise(scriptElem){this._scriptLoadingPromise=new Promise((resolve,reject)=>{this._windowRef.getNativeWindow()[this.callbackName]=()=>{resolve()},scriptElem.onerror=error=>{reject(error)}})}_getScriptSrc(callbackName){let protocol;switch(this._config&&this._config.protocol||GoogleMapsScriptProtocol.HTTPS){case GoogleMapsScriptProtocol.AUTO:protocol="";break;case GoogleMapsScriptProtocol.HTTP:protocol="http:";break;case GoogleMapsScriptProtocol.HTTPS:protocol="https:"}const hostAndPath=this._config.hostAndPath||"maps.googleapis.com/maps/api/js",queryParams={v:this._config.apiVersion||"quarterly",callback:callbackName,key:this._config.apiKey,client:this._config.clientId,channel:this._config.channel,libraries:this._config.libraries,region:this._config.region,language:this._config.language||("en-US"!==this.localeId?this.localeId:null)};return`${protocol}//${hostAndPath}?${Object.keys(queryParams).filter(k=>null!=queryParams[k]).filter(k=>!Array.isArray(queryParams[k])||Array.isArray(queryParams[k])&&queryParams[k].length>0).map(k=>{const i=queryParams[k];return Array.isArray(i)?{key:k,value:i.join(",")}:{key:k,value:queryParams[k]}}).map(entry=>`${entry.key}=${entry.value}`).join("&")}`}}LazyMapsAPILoader.\u0275fac=function LazyMapsAPILoader_Factory(t){return new(t||LazyMapsAPILoader)(core.Rc(LAZY_MAPS_API_CONFIG,8),core.Rc(WindowRef),core.Rc(DocumentRef),core.Rc(core.I))},LazyMapsAPILoader.\u0275prov=core.Ec({token:LazyMapsAPILoader,factory:LazyMapsAPILoader.\u0275fac}),LazyMapsAPILoader.ctorParameters=()=>[{type:void 0,decorators:[{type:core.Q},{type:core.B,args:[LAZY_MAPS_API_CONFIG]}]},{type:WindowRef},{type:DocumentRef},{type:String,decorators:[{type:core.B,args:[core.I]}]}];class agm_core_MarkerManager{constructor(_mapsWrapper,_zone){this._mapsWrapper=_mapsWrapper,this._zone=_zone,this._markers=new Map}convertAnimation(uiAnim){return Object(tslib.__awaiter)(this,void 0,void 0,function*(){return null===uiAnim?null:this._mapsWrapper.getNativeMap().then(()=>google.maps.Animation[uiAnim])})}deleteMarker(markerDirective){const markerPromise=this._markers.get(markerDirective);return null==markerPromise?Promise.resolve():markerPromise.then(marker=>this._zone.run(()=>{marker.setMap(null),this._markers.delete(markerDirective)}))}updateMarkerPosition(marker){return this._markers.get(marker).then(m=>m.setPosition({lat:marker.latitude,lng:marker.longitude}))}updateTitle(marker){return this._markers.get(marker).then(m=>m.setTitle(marker.title))}updateLabel(marker){return this._markers.get(marker).then(m=>{m.setLabel(marker.label)})}updateDraggable(marker){return this._markers.get(marker).then(m=>m.setDraggable(marker.draggable))}updateIcon(marker){return this._markers.get(marker).then(m=>m.setIcon(marker.iconUrl))}updateOpacity(marker){return this._markers.get(marker).then(m=>m.setOpacity(marker.opacity))}updateVisible(marker){return this._markers.get(marker).then(m=>m.setVisible(marker.visible))}updateZIndex(marker){return this._markers.get(marker).then(m=>m.setZIndex(marker.zIndex))}updateClickable(marker){return this._markers.get(marker).then(m=>m.setClickable(marker.clickable))}updateAnimation(marker){return Object(tslib.__awaiter)(this,void 0,void 0,function*(){(yield this._markers.get(marker)).setAnimation(yield this.convertAnimation(marker.animation))})}addMarker(marker){const markerPromise=new Promise(resolve=>Object(tslib.__awaiter)(this,void 0,void 0,function*(){return this._mapsWrapper.createMarker({position:{lat:marker.latitude,lng:marker.longitude},label:marker.label,draggable:marker.draggable,icon:marker.iconUrl,opacity:marker.opacity,visible:marker.visible,zIndex:marker.zIndex,title:marker.title,clickable:marker.clickable,animation:yield this.convertAnimation(marker.animation)}).then(resolve)}));this._markers.set(marker,markerPromise)}getNativeMarker(marker){return this._markers.get(marker)}createEventObservable(eventName,marker){return new Observable.a(observer=>{this._markers.get(marker).then(m=>m.addListener(eventName,e=>this._zone.run(()=>observer.next(e))))})}}agm_core_MarkerManager.\u0275fac=function MarkerManager_Factory(t){return new(t||agm_core_MarkerManager)(core.Rc(agm_core_GoogleMapsAPIWrapper),core.Rc(core.P))},agm_core_MarkerManager.\u0275prov=core.Ec({token:agm_core_MarkerManager,factory:agm_core_MarkerManager.\u0275fac}),agm_core_MarkerManager.ctorParameters=()=>[{type:agm_core_GoogleMapsAPIWrapper},{type:core.P}];class agm_core_InfoWindowManager{constructor(_mapsWrapper,_zone,_markerManager){this._mapsWrapper=_mapsWrapper,this._zone=_zone,this._markerManager=_markerManager,this._infoWindows=new Map}deleteInfoWindow(infoWindow){const iWindow=this._infoWindows.get(infoWindow);return null==iWindow?Promise.resolve():iWindow.then(i=>this._zone.run(()=>{i.close(),this._infoWindows.delete(infoWindow)}))}setPosition(infoWindow){return this._infoWindows.get(infoWindow).then(i=>i.setPosition({lat:infoWindow.latitude,lng:infoWindow.longitude}))}setZIndex(infoWindow){return this._infoWindows.get(infoWindow).then(i=>i.setZIndex(infoWindow.zIndex))}open(infoWindow){return this._infoWindows.get(infoWindow).then(w=>null!=infoWindow.hostMarker?this._markerManager.getNativeMarker(infoWindow.hostMarker).then(marker=>this._mapsWrapper.getNativeMap().then(map=>w.open(map,marker))):this._mapsWrapper.getNativeMap().then(map=>w.open(map)))}close(infoWindow){return this._infoWindows.get(infoWindow).then(w=>w.close())}setOptions(infoWindow,options){return this._infoWindows.get(infoWindow).then(i=>i.setOptions(options))}addInfoWindow(infoWindow){const options={content:infoWindow.content,maxWidth:infoWindow.maxWidth,zIndex:infoWindow.zIndex,disableAutoPan:infoWindow.disableAutoPan};"number"==typeof infoWindow.latitude&&"number"==typeof infoWindow.longitude&&(options.position={lat:infoWindow.latitude,lng:infoWindow.longitude});const infoWindowPromise=this._mapsWrapper.createInfoWindow(options);this._infoWindows.set(infoWindow,infoWindowPromise)}createEventObservable(eventName,infoWindow){return new Observable.a(observer=>{this._infoWindows.get(infoWindow).then(i=>{i.addListener(eventName,e=>this._zone.run(()=>observer.next(e)))})})}}agm_core_InfoWindowManager.\u0275fac=function InfoWindowManager_Factory(t){return new(t||agm_core_InfoWindowManager)(core.Rc(agm_core_GoogleMapsAPIWrapper),core.Rc(core.P),core.Rc(agm_core_MarkerManager))},agm_core_InfoWindowManager.\u0275prov=core.Ec({token:agm_core_InfoWindowManager,factory:agm_core_InfoWindowManager.\u0275fac}),agm_core_InfoWindowManager.ctorParameters=()=>[{type:agm_core_GoogleMapsAPIWrapper},{type:core.P},{type:agm_core_MarkerManager}];class agm_core_KmlLayerManager{constructor(_wrapper,_zone){this._wrapper=_wrapper,this._zone=_zone,this._layers=new Map}addKmlLayer(layer){const newLayer=this._wrapper.getNativeMap().then(m=>new google.maps.KmlLayer({clickable:layer.clickable,map:m,preserveViewport:layer.preserveViewport,screenOverlays:layer.screenOverlays,suppressInfoWindows:layer.suppressInfoWindows,url:layer.url,zIndex:layer.zIndex}));this._layers.set(layer,newLayer)}setOptions(layer,options){this._layers.get(layer).then(l=>l.setOptions(options))}deleteKmlLayer(layer){this._layers.get(layer).then(l=>{l.setMap(null),this._layers.delete(layer)})}createEventObservable(eventName,layer){return new Observable.a(observer=>{this._layers.get(layer).then(m=>{m.addListener(eventName,e=>this._zone.run(()=>observer.next(e)))})})}}agm_core_KmlLayerManager.\u0275fac=function KmlLayerManager_Factory(t){return new(t||agm_core_KmlLayerManager)(core.Rc(agm_core_GoogleMapsAPIWrapper),core.Rc(core.P))},agm_core_KmlLayerManager.\u0275prov=core.Ec({token:agm_core_KmlLayerManager,factory:agm_core_KmlLayerManager.\u0275fac}),agm_core_KmlLayerManager.ctorParameters=()=>[{type:agm_core_GoogleMapsAPIWrapper},{type:core.P}];class LayerManager{constructor(_wrapper){this._wrapper=_wrapper,this._layers=new Map}addTransitLayer(layer){const newLayer=this._wrapper.createTransitLayer();this._layers.set(layer,newLayer)}addBicyclingLayer(layer){const newLayer=this._wrapper.createBicyclingLayer();this._layers.set(layer,newLayer)}deleteLayer(layer){return this._layers.get(layer).then(currentLayer=>{currentLayer.setMap(null),this._layers.delete(layer)})}}LayerManager.\u0275fac=function LayerManager_Factory(t){return new(t||LayerManager)(core.Rc(agm_core_GoogleMapsAPIWrapper))},LayerManager.\u0275prov=core.Ec({token:LayerManager,factory:LayerManager.\u0275fac}),LayerManager.ctorParameters=()=>[{type:agm_core_GoogleMapsAPIWrapper}];function createMVCEventObservable(array){const eventNames=["insert_at","remove_at","set_at"];return fromEventPattern(handler=>eventNames.map(eventName=>array.addListener(eventName,(index,previous)=>handler.apply(array,[{newArr:array.getArray(),eventName:eventName,index:index,previous:previous}]))),(_handler,evListeners)=>evListeners.forEach(evListener=>evListener.remove()))}class agm_core_PolygonManager{constructor(_mapsWrapper,_zone){this._mapsWrapper=_mapsWrapper,this._zone=_zone,this._polygons=new Map}addPolygon(path){const polygonPromise=this._mapsWrapper.createPolygon({clickable:path.clickable,draggable:path.draggable,editable:path.editable,fillColor:path.fillColor,fillOpacity:path.fillOpacity,geodesic:path.geodesic,paths:path.paths,strokeColor:path.strokeColor,strokeOpacity:path.strokeOpacity,strokeWeight:path.strokeWeight,visible:path.visible,zIndex:path.zIndex});this._polygons.set(path,polygonPromise)}updatePolygon(polygon){const m=this._polygons.get(polygon);return null==m?Promise.resolve():m.then(l=>this._zone.run(()=>{l.setPaths(polygon.paths)}))}setPolygonOptions(path,options){return this._polygons.get(path).then(l=>{l.setOptions(options)})}deletePolygon(paths){const m=this._polygons.get(paths);return null==m?Promise.resolve():m.then(l=>this._zone.run(()=>{l.setMap(null),this._polygons.delete(paths)}))}getPath(polygonDirective){return this._polygons.get(polygonDirective).then(polygon=>polygon.getPath().getArray())}getPaths(polygonDirective){return this._polygons.get(polygonDirective).then(polygon=>polygon.getPaths().getArray().map(p=>p.getArray()))}createEventObservable(eventName,path){return new Observable.a(observer=>{this._polygons.get(path).then(l=>{l.addListener(eventName,e=>this._zone.run(()=>observer.next(e)))})})}createPathEventObservable(agmPolygon){return Object(tslib.__awaiter)(this,void 0,void 0,function*(){const paths=(yield this._polygons.get(agmPolygon)).getPaths();return createMVCEventObservable(paths).pipe(Object(startWith.a)({newArr:paths.getArray()}),Object(switchMap.a)(parentMVEvent=>Object(merge.a)(...parentMVEvent.newArr.map((chMVC,index)=>createMVCEventObservable(chMVC).pipe(Object(map.a)(chMVCEvent=>({parentMVEvent:parentMVEvent,chMVCEvent:chMVCEvent,pathIndex:index}))))).pipe(Object(startWith.a)({parentMVEvent:parentMVEvent,chMVCEvent:null,pathIndex:null}))),function skip(count){return source=>source.lift(new SkipOperator(count))}(1),Object(map.a)(({parentMVEvent:parentMVEvent,chMVCEvent:chMVCEvent,pathIndex:pathIndex})=>{let retVal;return chMVCEvent?(retVal={newArr:parentMVEvent.newArr.map(subArr=>subArr.getArray().map(latLng=>latLng.toJSON())),pathIndex:pathIndex,eventName:chMVCEvent.eventName,index:chMVCEvent.index},chMVCEvent.previous&&(retVal.previous=chMVCEvent.previous)):(retVal={newArr:parentMVEvent.newArr.map(subArr=>subArr.getArray().map(latLng=>latLng.toJSON())),eventName:parentMVEvent.eventName,index:parentMVEvent.index},parentMVEvent.previous&&(retVal.previous=parentMVEvent.previous.getArray())),retVal}))})}}agm_core_PolygonManager.\u0275fac=function PolygonManager_Factory(t){return new(t||agm_core_PolygonManager)(core.Rc(agm_core_GoogleMapsAPIWrapper),core.Rc(core.P))},agm_core_PolygonManager.\u0275prov=core.Ec({token:agm_core_PolygonManager,factory:agm_core_PolygonManager.\u0275fac}),agm_core_PolygonManager.ctorParameters=()=>[{type:agm_core_GoogleMapsAPIWrapper},{type:core.P}];class agm_core_PolylineManager{constructor(_mapsWrapper,_zone){this._mapsWrapper=_mapsWrapper,this._zone=_zone,this._polylines=new Map}static _convertPoints(line){return line._getPoints().map(point=>({lat:point.latitude,lng:point.longitude}))}static _convertPath(path){const symbolPath=google.maps.SymbolPath[path];return"number"==typeof symbolPath?symbolPath:path}static _convertIcons(line){const icons=line._getIcons().map(agmIcon=>({fixedRotation:agmIcon.fixedRotation,offset:agmIcon.offset,repeat:agmIcon.repeat,icon:{anchor:new google.maps.Point(agmIcon.anchorX,agmIcon.anchorY),fillColor:agmIcon.fillColor,fillOpacity:agmIcon.fillOpacity,path:agm_core_PolylineManager._convertPath(agmIcon.path),rotation:agmIcon.rotation,scale:agmIcon.scale,strokeColor:agmIcon.strokeColor,strokeOpacity:agmIcon.strokeOpacity,strokeWeight:agmIcon.strokeWeight}}));return icons.forEach(icon=>{Object.entries(icon).forEach(([key,val])=>{void 0===val&&delete icon[key]}),void 0!==icon.icon.anchor.x&&void 0!==icon.icon.anchor.y||delete icon.icon.anchor}),icons}addPolyline(line){const polylinePromise=this._mapsWrapper.getNativeMap().then(()=>[agm_core_PolylineManager._convertPoints(line),agm_core_PolylineManager._convertIcons(line)]).then(([path,icons])=>this._mapsWrapper.createPolyline({clickable:line.clickable,draggable:line.draggable,editable:line.editable,geodesic:line.geodesic,strokeColor:line.strokeColor,strokeOpacity:line.strokeOpacity,strokeWeight:line.strokeWeight,visible:line.visible,zIndex:line.zIndex,path:path,icons:icons}));this._polylines.set(line,polylinePromise)}updatePolylinePoints(line){const path=agm_core_PolylineManager._convertPoints(line),m=this._polylines.get(line);return null==m?Promise.resolve():m.then(l=>this._zone.run(()=>l.setPath(path)))}updateIconSequences(line){return Object(tslib.__awaiter)(this,void 0,void 0,function*(){yield this._mapsWrapper.getNativeMap();const icons=agm_core_PolylineManager._convertIcons(line),m=this._polylines.get(line);if(null!=m)return m.then(l=>this._zone.run(()=>l.setOptions({icons:icons})))})}setPolylineOptions(line,options){return this._polylines.get(line).then(l=>{l.setOptions(options)})}deletePolyline(line){const m=this._polylines.get(line);return null==m?Promise.resolve():m.then(l=>this._zone.run(()=>{l.setMap(null),this._polylines.delete(line)}))}getMVCPath(agmPolyline){return Object(tslib.__awaiter)(this,void 0,void 0,function*(){return(yield this._polylines.get(agmPolyline)).getPath()})}getPath(agmPolyline){return Object(tslib.__awaiter)(this,void 0,void 0,function*(){return(yield this.getMVCPath(agmPolyline)).getArray()})}createEventObservable(eventName,line){return new Observable.a(observer=>{this._polylines.get(line).then(l=>{l.addListener(eventName,e=>this._zone.run(()=>observer.next(e)))})})}createPathEventObservable(line){return Object(tslib.__awaiter)(this,void 0,void 0,function*(){return createMVCEventObservable(yield this.getMVCPath(line))})}}agm_core_PolylineManager.\u0275fac=function PolylineManager_Factory(t){return new(t||agm_core_PolylineManager)(core.Rc(agm_core_GoogleMapsAPIWrapper),core.Rc(core.P))},agm_core_PolylineManager.\u0275prov=core.Ec({token:agm_core_PolylineManager,factory:agm_core_PolylineManager.\u0275fac}),agm_core_PolylineManager.ctorParameters=()=>[{type:agm_core_GoogleMapsAPIWrapper},{type:core.P}];class agm_core_RectangleManager{constructor(_apiWrapper,_zone){this._apiWrapper=_apiWrapper,this._zone=_zone,this._rectangles=new Map}addRectangle(rectangle){this._apiWrapper.getNativeMap().then(()=>this._rectangles.set(rectangle,this._apiWrapper.createRectangle({bounds:{north:rectangle.north,east:rectangle.east,south:rectangle.south,west:rectangle.west},clickable:rectangle.clickable,draggable:rectangle.draggable,editable:rectangle.editable,fillColor:rectangle.fillColor,fillOpacity:rectangle.fillOpacity,strokeColor:rectangle.strokeColor,strokeOpacity:rectangle.strokeOpacity,strokePosition:google.maps.StrokePosition[rectangle.strokePosition],strokeWeight:rectangle.strokeWeight,visible:rectangle.visible,zIndex:rectangle.zIndex})))}removeRectangle(rectangle){return this._rectangles.get(rectangle).then(r=>{r.setMap(null),this._rectangles.delete(rectangle)})}setOptions(rectangle,options){return this._rectangles.get(rectangle).then(r=>{const actualStrokePosition=options.strokePosition;options.strokePosition=google.maps.StrokePosition[actualStrokePosition],r.setOptions(options)})}getBounds(rectangle){return this._rectangles.get(rectangle).then(r=>r.getBounds())}setBounds(rectangle){return this._rectangles.get(rectangle).then(r=>r.setBounds({north:rectangle.north,east:rectangle.east,south:rectangle.south,west:rectangle.west}))}setEditable(rectangle){return this._rectangles.get(rectangle).then(r=>r.setEditable(rectangle.editable))}setDraggable(rectangle){return this._rectangles.get(rectangle).then(r=>r.setDraggable(rectangle.draggable))}setVisible(rectangle){return this._rectangles.get(rectangle).then(r=>r.setVisible(rectangle.visible))}createEventObservable(eventName,rectangle){return new Observable.a(subsrciber=>{let listener=null;return this._rectangles.get(rectangle).then(r=>{listener=r.addListener(eventName,e=>this._zone.run(()=>subsrciber.next(e)))}),()=>{null!==listener&&listener.remove()}})}}agm_core_RectangleManager.\u0275fac=function RectangleManager_Factory(t){return new(t||agm_core_RectangleManager)(core.Rc(agm_core_GoogleMapsAPIWrapper),core.Rc(core.P))},agm_core_RectangleManager.\u0275prov=core.Ec({token:agm_core_RectangleManager,factory:agm_core_RectangleManager.\u0275fac}),agm_core_RectangleManager.ctorParameters=()=>[{type:agm_core_GoogleMapsAPIWrapper},{type:core.P}];let layerId=0;class AgmBicyclingLayer{constructor(_manager){this._manager=_manager,this._addedToManager=!1,this._id=(layerId++).toString(),this.visible=!0}ngOnInit(){this._addedToManager||(this._manager.addBicyclingLayer(this),this._addedToManager=!0)}id(){return this._id}toString(){return"AgmBicyclingLayer-"+this._id.toString()}ngOnDestroy(){this._manager.deleteLayer(this)}}AgmBicyclingLayer.\u0275fac=function AgmBicyclingLayer_Factory(t){return new(t||AgmBicyclingLayer)(core.Ic(LayerManager))},AgmBicyclingLayer.\u0275dir=core.Dc({type:AgmBicyclingLayer,selectors:[["agm-bicycling-layer"]],inputs:{visible:"visible"}}),AgmBicyclingLayer.ctorParameters=()=>[{type:LayerManager}],AgmBicyclingLayer.propDecorators={visible:[{type:core.F}]};class agm_core_AgmCircle{constructor(_manager){this._manager=_manager,this.clickable=!0,this.draggable=!1,this.editable=!1,this.radius=0,this.strokePosition="CENTER",this.strokeWeight=0,this.visible=!0,this.centerChange=new core.w,this.circleClick=new core.w,this.circleDblClick=new core.w,this.drag=new core.w,this.dragEnd=new core.w,this.dragStart=new core.w,this.mouseDown=new core.w,this.mouseMove=new core.w,this.mouseOut=new core.w,this.mouseOver=new core.w,this.mouseUp=new core.w,this.radiusChange=new core.w,this.rightClick=new core.w,this._circleAddedToManager=!1,this._eventSubscriptions=[]}ngOnInit(){this._manager.addCircle(this),this._circleAddedToManager=!0,this._registerEventListeners()}ngOnChanges(changes){this._circleAddedToManager&&((changes.latitude||changes.longitude)&&this._manager.setCenter(this),changes.editable&&this._manager.setEditable(this),changes.draggable&&this._manager.setDraggable(this),changes.visible&&this._manager.setVisible(this),changes.radius&&this._manager.setRadius(this),this._updateCircleOptionsChanges(changes))}_updateCircleOptionsChanges(changes){const options={},optionKeys=Object.keys(changes).filter(k=>-1!==agm_core_AgmCircle._mapOptions.indexOf(k));optionKeys.forEach(k=>{options[k]=changes[k].currentValue}),optionKeys.length>0&&this._manager.setOptions(this,options)}_registerEventListeners(){const events=new Map;events.set("center_changed",this.centerChange),events.set("click",this.circleClick),events.set("dblclick",this.circleDblClick),events.set("drag",this.drag),events.set("dragend",this.dragEnd),events.set("dragstart",this.dragStart),events.set("mousedown",this.mouseDown),events.set("mousemove",this.mouseMove),events.set("mouseout",this.mouseOut),events.set("mouseover",this.mouseOver),events.set("mouseup",this.mouseUp),events.set("radius_changed",this.radiusChange),events.set("rightclick",this.rightClick),events.forEach((eventEmitter,eventName)=>{this._eventSubscriptions.push(this._manager.createEventObservable(eventName,this).subscribe(value=>{switch(eventName){case"radius_changed":this._manager.getRadius(this).then(radius=>eventEmitter.emit(radius));break;case"center_changed":this._manager.getCenter(this).then(center=>eventEmitter.emit({lat:center.lat(),lng:center.lng()}));break;default:eventEmitter.emit(value)}}))})}ngOnDestroy(){this._eventSubscriptions.forEach(s=>s.unsubscribe()),this._eventSubscriptions=null,this._manager.removeCircle(this)}getBounds(){return this._manager.getBounds(this)}getCenter(){return this._manager.getCenter(this)}}agm_core_AgmCircle.\u0275fac=function AgmCircle_Factory(t){return new(t||agm_core_AgmCircle)(core.Ic(agm_core_CircleManager))},agm_core_AgmCircle.\u0275dir=core.Dc({type:agm_core_AgmCircle,selectors:[["agm-circle"]],inputs:{clickable:"clickable",draggable:["circleDraggable","draggable"],editable:"editable",radius:"radius",strokePosition:"strokePosition",strokeWeight:"strokeWeight",visible:"visible",latitude:"latitude",longitude:"longitude",fillColor:"fillColor",fillOpacity:"fillOpacity",strokeColor:"strokeColor",strokeOpacity:"strokeOpacity",zIndex:"zIndex"},outputs:{centerChange:"centerChange",circleClick:"circleClick",circleDblClick:"circleDblClick",drag:"drag",dragEnd:"dragEnd",dragStart:"dragStart",mouseDown:"mouseDown",mouseMove:"mouseMove",mouseOut:"mouseOut",mouseOver:"mouseOver",mouseUp:"mouseUp",radiusChange:"radiusChange",rightClick:"rightClick"},features:[core.uc]}),agm_core_AgmCircle._mapOptions=["fillColor","fillOpacity","strokeColor","strokeOpacity","strokePosition","strokeWeight","visible","zIndex","clickable"],agm_core_AgmCircle.ctorParameters=()=>[{type:agm_core_CircleManager}],agm_core_AgmCircle.propDecorators={latitude:[{type:core.F}],longitude:[{type:core.F}],clickable:[{type:core.F}],draggable:[{type:core.F,args:["circleDraggable"]}],editable:[{type:core.F}],fillColor:[{type:core.F}],fillOpacity:[{type:core.F}],radius:[{type:core.F}],strokeColor:[{type:core.F}],strokeOpacity:[{type:core.F}],strokePosition:[{type:core.F}],strokeWeight:[{type:core.F}],visible:[{type:core.F}],zIndex:[{type:core.F}],centerChange:[{type:core.R}],circleClick:[{type:core.R}],circleDblClick:[{type:core.R}],drag:[{type:core.R}],dragEnd:[{type:core.R}],dragStart:[{type:core.R}],mouseDown:[{type:core.R}],mouseMove:[{type:core.R}],mouseOut:[{type:core.R}],mouseOver:[{type:core.R}],mouseUp:[{type:core.R}],radiusChange:[{type:core.R}],rightClick:[{type:core.R}]};let layerId$1=0;class agm_core_AgmDataLayer{constructor(_manager){this._manager=_manager,this._addedToManager=!1,this._id=(layerId$1++).toString(),this._subscriptions=[],this.layerClick=new core.w,this.geoJson=null}ngOnInit(){this._addedToManager||(this._manager.addDataLayer(this),this._addedToManager=!0,this._addEventListeners())}_addEventListeners(){[{name:"click",handler:ev=>this.layerClick.emit(ev)}].forEach(obj=>{const os=this._manager.createEventObservable(obj.name,this).subscribe(obj.handler);this._subscriptions.push(os)})}id(){return this._id}toString(){return"AgmDataLayer-"+this._id.toString()}ngOnDestroy(){this._manager.deleteDataLayer(this),this._subscriptions.forEach(s=>s.unsubscribe())}ngOnChanges(changes){if(!this._addedToManager)return;const geoJsonChange=changes.geoJson;geoJsonChange&&this._manager.updateGeoJson(this,geoJsonChange.currentValue);const dataOptions=agm_core_AgmDataLayer._dataOptionsAttributes.reduce((options,k)=>options[k]=changes.hasOwnProperty(k)?changes[k].currentValue:this[k],{});this._manager.setDataOptions(this,dataOptions)}}agm_core_AgmDataLayer.\u0275fac=function AgmDataLayer_Factory(t){return new(t||agm_core_AgmDataLayer)(core.Ic(agm_core_DataLayerManager))},agm_core_AgmDataLayer.\u0275dir=core.Dc({type:agm_core_AgmDataLayer,selectors:[["agm-data-layer"]],inputs:{geoJson:"geoJson",style:"style"},outputs:{layerClick:"layerClick"},features:[core.uc]}),agm_core_AgmDataLayer._dataOptionsAttributes=["style"],agm_core_AgmDataLayer.ctorParameters=()=>[{type:agm_core_DataLayerManager}],agm_core_AgmDataLayer.propDecorators={layerClick:[{type:core.R}],geoJson:[{type:core.F}],style:[{type:core.F}]};class agm_core_AgmFitBounds{constructor(_fitBoundsAccessor,_fitBoundsService){this._fitBoundsAccessor=_fitBoundsAccessor,this._fitBoundsService=_fitBoundsService,this.agmFitBounds=!0,this._destroyed$=new Subject.a,this._latestFitBoundsDetails=null}ngOnChanges(){this._updateBounds()}ngOnInit(){this._fitBoundsAccessor.getFitBoundsDetails$().pipe(function distinctUntilChanged(compare,keySelector){return source=>source.lift(new DistinctUntilChangedOperator(compare,keySelector))}((x,y)=>x.latLng.lat===y.latLng.lat&&x.latLng.lng===y.latLng.lng),function takeUntil(notifier){return source=>source.lift(new takeUntil_TakeUntilOperator(notifier))}(this._destroyed$)).subscribe(details=>this._updateBounds(details))}_updateBounds(newFitBoundsDetails){this._latestFitBoundsDetails&&this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng),newFitBoundsDetails&&(this._latestFitBoundsDetails=newFitBoundsDetails),this._latestFitBoundsDetails&&!0===this.agmFitBounds&&this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng)}ngOnDestroy(){this._destroyed$.next(),this._destroyed$.complete(),null!==this._latestFitBoundsDetails&&this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng)}}agm_core_AgmFitBounds.\u0275fac=function AgmFitBounds_Factory(t){return new(t||agm_core_AgmFitBounds)(core.Ic(FitBoundsAccessor,2),core.Ic(agm_core_FitBoundsService))},agm_core_AgmFitBounds.\u0275dir=core.Dc({type:agm_core_AgmFitBounds,selectors:[["","agmFitBounds",""]],inputs:{agmFitBounds:"agmFitBounds"},features:[core.uc]}),agm_core_AgmFitBounds.ctorParameters=()=>[{type:FitBoundsAccessor,decorators:[{type:core.cb}]},{type:agm_core_FitBoundsService}],agm_core_AgmFitBounds.propDecorators={agmFitBounds:[{type:core.F}]};let infoWindowId=0;class agm_core_AgmInfoWindow{constructor(_infoWindowManager,_el){this._infoWindowManager=_infoWindowManager,this._el=_el,this.isOpen=!1,this.infoWindowClose=new core.w,this._infoWindowAddedToManager=!1,this._id=(infoWindowId++).toString()}ngOnInit(){this.content=this._el.nativeElement.querySelector(".agm-info-window-content"),this._infoWindowManager.addInfoWindow(this),this._infoWindowAddedToManager=!0,this._updateOpenState(),this._registerEventListeners()}ngOnChanges(changes){this._infoWindowAddedToManager&&((changes.latitude||changes.longitude)&&"number"==typeof this.latitude&&"number"==typeof this.longitude&&this._infoWindowManager.setPosition(this),changes.zIndex&&this._infoWindowManager.setZIndex(this),changes.isOpen&&this._updateOpenState(),this._setInfoWindowOptions(changes))}_registerEventListeners(){this._infoWindowManager.createEventObservable("closeclick",this).subscribe(()=>{this.isOpen=!1,this.infoWindowClose.emit()})}_updateOpenState(){this.isOpen?this.open():this.close()}_setInfoWindowOptions(changes){const options={};Object.keys(changes).filter(k=>-1!==agm_core_AgmInfoWindow._infoWindowOptionsInputs.indexOf(k)).forEach(k=>{options[k]=changes[k].currentValue}),this._infoWindowManager.setOptions(this,options)}open(){return this._infoWindowManager.open(this)}close(){return this._infoWindowManager.close(this).then(()=>{this.infoWindowClose.emit()})}id(){return this._id}toString(){return"AgmInfoWindow-"+this._id.toString()}ngOnDestroy(){this._infoWindowManager.deleteInfoWindow(this)}}agm_core_AgmInfoWindow.\u0275fac=function AgmInfoWindow_Factory(t){return new(t||agm_core_AgmInfoWindow)(core.Ic(agm_core_InfoWindowManager),core.Ic(core.u))},agm_core_AgmInfoWindow.\u0275cmp=core.Cc({type:agm_core_AgmInfoWindow,selectors:[["agm-info-window"]],inputs:{isOpen:"isOpen",latitude:"latitude",longitude:"longitude",disableAutoPan:"disableAutoPan",zIndex:"zIndex",maxWidth:"maxWidth"},outputs:{infoWindowClose:"infoWindowClose"},features:[core.uc],ngContentSelectors:_c0,decls:2,vars:0,consts:[[1,"agm-info-window-content"]],template:function AgmInfoWindow_Template(rf,ctx){1&rf&&(core.dd(),core.Nc(0,"div",0),core.cd(1),core.Mc())},encapsulation:2}),agm_core_AgmInfoWindow._infoWindowOptionsInputs=["disableAutoPan","maxWidth"],agm_core_AgmInfoWindow.ctorParameters=()=>[{type:agm_core_InfoWindowManager},{type:core.u}],agm_core_AgmInfoWindow.propDecorators={latitude:[{type:core.F}],longitude:[{type:core.F}],disableAutoPan:[{type:core.F}],zIndex:[{type:core.F}],maxWidth:[{type:core.F}],isOpen:[{type:core.F}],infoWindowClose:[{type:core.R}]};let layerId$2=0;class agm_core_AgmKmlLayer{constructor(_manager){this._manager=_manager,this._addedToManager=!1,this._id=(layerId$2++).toString(),this._subscriptions=[],this.clickable=!0,this.preserveViewport=!1,this.screenOverlays=!0,this.suppressInfoWindows=!1,this.url=null,this.zIndex=null,this.layerClick=new core.w,this.defaultViewportChange=new core.w,this.statusChange=new core.w}ngOnInit(){this._addedToManager||(this._manager.addKmlLayer(this),this._addedToManager=!0,this._addEventListeners())}ngOnChanges(changes){this._addedToManager&&this._updatePolygonOptions(changes)}_updatePolygonOptions(changes){const options=Object.keys(changes).filter(k=>-1!==agm_core_AgmKmlLayer._kmlLayerOptions.indexOf(k)).reduce((obj,k)=>(obj[k]=changes[k].currentValue,obj),{});Object.keys(options).length>0&&this._manager.setOptions(this,options)}_addEventListeners(){[{name:"click",handler:ev=>this.layerClick.emit(ev)},{name:"defaultviewport_changed",handler:()=>this.defaultViewportChange.emit()},{name:"status_changed",handler:()=>this.statusChange.emit()}].forEach(obj=>{const os=this._manager.createEventObservable(obj.name,this).subscribe(obj.handler);this._subscriptions.push(os)})}id(){return this._id}toString(){return"AgmKmlLayer-"+this._id.toString()}ngOnDestroy(){this._manager.deleteKmlLayer(this),this._subscriptions.forEach(s=>s.unsubscribe())}}agm_core_AgmKmlLayer.\u0275fac=function AgmKmlLayer_Factory(t){return new(t||agm_core_AgmKmlLayer)(core.Ic(agm_core_KmlLayerManager))},agm_core_AgmKmlLayer.\u0275dir=core.Dc({type:agm_core_AgmKmlLayer,selectors:[["agm-kml-layer"]],inputs:{clickable:"clickable",preserveViewport:"preserveViewport",screenOverlays:"screenOverlays",suppressInfoWindows:"suppressInfoWindows",url:"url",zIndex:"zIndex"},outputs:{layerClick:"layerClick",defaultViewportChange:"defaultViewportChange",statusChange:"statusChange"},features:[core.uc]}),agm_core_AgmKmlLayer._kmlLayerOptions=["clickable","preserveViewport","screenOverlays","suppressInfoWindows","url","zIndex"],agm_core_AgmKmlLayer.ctorParameters=()=>[{type:agm_core_KmlLayerManager}],agm_core_AgmKmlLayer.propDecorators={clickable:[{type:core.F}],preserveViewport:[{type:core.F}],screenOverlays:[{type:core.F}],suppressInfoWindows:[{type:core.F}],url:[{type:core.F}],zIndex:[{type:core.F}],layerClick:[{type:core.R}],defaultViewportChange:[{type:core.R}],statusChange:[{type:core.R}]};class AgmMapControl{}AgmMapControl.\u0275fac=function AgmMapControl_Factory(t){return new(t||AgmMapControl)},AgmMapControl.\u0275dir=core.Dc({type:AgmMapControl,inputs:{position:"position"}}),AgmMapControl.propDecorators={position:[{type:core.F}]};class AgmFullscreenControl extends AgmMapControl{getOptions(){return{fullscreenControl:!0,fullscreenControlOptions:{position:this.position&&google.maps.ControlPosition[this.position]}}}}AgmFullscreenControl.\u0275fac=function AgmFullscreenControl_Factory(t){return \u0275AgmFullscreenControl_BaseFactory(t||AgmFullscreenControl)},AgmFullscreenControl.\u0275dir=core.Dc({type:AgmFullscreenControl,selectors:[["agm-fullscreen-control"]],features:[core.vc([{provide:AgmMapControl,useExisting:AgmFullscreenControl}]),core.tc]});const \u0275AgmFullscreenControl_BaseFactory=core.Pc(AgmFullscreenControl);class AgmMapTypeControl extends AgmMapControl{getOptions(){return{mapTypeControl:!0,mapTypeControlOptions:{position:this.position&&google.maps.ControlPosition[this.position],style:this.style&&google.maps.MapTypeControlStyle[this.style],mapTypeIds:this.mapTypeIds&&this.mapTypeIds.map(mapTypeId=>google.maps.MapTypeId[mapTypeId])}}}}AgmMapTypeControl.\u0275fac=function AgmMapTypeControl_Factory(t){return \u0275AgmMapTypeControl_BaseFactory(t||AgmMapTypeControl)},AgmMapTypeControl.\u0275dir=core.Dc({type:AgmMapTypeControl,selectors:[["agm-map-type-control"]],inputs:{mapTypeIds:"mapTypeIds",style:"style"},features:[core.vc([{provide:AgmMapControl,useExisting:AgmMapTypeControl}]),core.tc]}),AgmMapTypeControl.propDecorators={mapTypeIds:[{type:core.F}],style:[{type:core.F}]};const \u0275AgmMapTypeControl_BaseFactory=core.Pc(AgmMapTypeControl);class AgmPanControl extends AgmMapControl{getOptions(){return{panControl:!0,panControlOptions:{position:this.position&&google.maps.ControlPosition[this.position]}}}}AgmPanControl.\u0275fac=function AgmPanControl_Factory(t){return \u0275AgmPanControl_BaseFactory(t||AgmPanControl)},AgmPanControl.\u0275dir=core.Dc({type:AgmPanControl,selectors:[["agm-pan-control"]],features:[core.vc([{provide:AgmMapControl,useExisting:AgmPanControl}]),core.tc]});const \u0275AgmPanControl_BaseFactory=core.Pc(AgmPanControl);class AgmRotateControl extends AgmMapControl{getOptions(){return{rotateControl:!0,rotateControlOptions:{position:this.position&&google.maps.ControlPosition[this.position]}}}}AgmRotateControl.\u0275fac=function AgmRotateControl_Factory(t){return \u0275AgmRotateControl_BaseFactory(t||AgmRotateControl)},AgmRotateControl.\u0275dir=core.Dc({type:AgmRotateControl,selectors:[["agm-rotate-control"]],features:[core.vc([{provide:AgmMapControl,useExisting:AgmRotateControl}]),core.tc]});const \u0275AgmRotateControl_BaseFactory=core.Pc(AgmRotateControl);class AgmScaleControl extends AgmMapControl{getOptions(){return{scaleControl:!0}}}AgmScaleControl.\u0275fac=function AgmScaleControl_Factory(t){return \u0275AgmScaleControl_BaseFactory(t||AgmScaleControl)},AgmScaleControl.\u0275dir=core.Dc({type:AgmScaleControl,selectors:[["agm-scale-control"]],features:[core.vc([{provide:AgmMapControl,useExisting:AgmScaleControl}]),core.tc]});const \u0275AgmScaleControl_BaseFactory=core.Pc(AgmScaleControl);class AgmStreetViewControl extends AgmMapControl{getOptions(){return{streetViewControl:!0,streetViewControlOptions:{position:this.position&&google.maps.ControlPosition[this.position]}}}}AgmStreetViewControl.\u0275fac=function AgmStreetViewControl_Factory(t){return \u0275AgmStreetViewControl_BaseFactory(t||AgmStreetViewControl)},AgmStreetViewControl.\u0275dir=core.Dc({type:AgmStreetViewControl,selectors:[["agm-street-view-control"]],features:[core.vc([{provide:AgmMapControl,useExisting:AgmStreetViewControl}]),core.tc]});const \u0275AgmStreetViewControl_BaseFactory=core.Pc(AgmStreetViewControl);class AgmZoomControl extends AgmMapControl{getOptions(){return{zoomControl:!0,zoomControlOptions:{position:this.position&&google.maps.ControlPosition[this.position],style:this.style&&google.maps.ZoomControlStyle[this.style]}}}}AgmZoomControl.\u0275fac=function AgmZoomControl_Factory(t){return \u0275AgmZoomControl_BaseFactory(t||AgmZoomControl)},AgmZoomControl.\u0275dir=core.Dc({type:AgmZoomControl,selectors:[["agm-zoom-control"]],inputs:{style:"style"},features:[core.vc([{provide:AgmMapControl,useExisting:AgmZoomControl}]),core.tc]}),AgmZoomControl.propDecorators={style:[{type:core.F}]};const \u0275AgmZoomControl_BaseFactory=core.Pc(AgmZoomControl);class agm_core_AgmMap{constructor(_elem,_mapsWrapper,_platformId,_fitBoundsService,_zone){this._elem=_elem,this._mapsWrapper=_mapsWrapper,this._platformId=_platformId,this._fitBoundsService=_fitBoundsService,this._zone=_zone,this.longitude=0,this.latitude=0,this.zoom=8,this.draggable=!0,this.disableDoubleClickZoom=!1,this.disableDefaultUI=!1,this.scrollwheel=!0,this.keyboardShortcuts=!0,this.styles=[],this.usePanning=!1,this.fitBounds=!1,this.mapTypeId="ROADMAP",this.clickableIcons=!0,this.showDefaultInfoWindow=!0,this.gestureHandling="auto",this.tilt=0,this._observableSubscriptions=[],this.mapClick=new core.w,this.mapRightClick=new core.w,this.mapDblClick=new core.w,this.centerChange=new core.w,this.boundsChange=new core.w,this.mapTypeIdChange=new core.w,this.idle=new core.w,this.zoomChange=new core.w,this.mapReady=new core.w,this.tilesLoaded=new core.w}ngAfterContentInit(){if(Object(common.t)(this._platformId))return;const container=this._elem.nativeElement.querySelector(".agm-map-container-inner");this._initMapInstance(container)}_initMapInstance(el){this._mapsWrapper.createMap(el,{center:{lat:this.latitude||0,lng:this.longitude||0},zoom:this.zoom,minZoom:this.minZoom,maxZoom:this.maxZoom,controlSize:this.controlSize,disableDefaultUI:this.disableDefaultUI,disableDoubleClickZoom:this.disableDoubleClickZoom,scrollwheel:this.scrollwheel,backgroundColor:this.backgroundColor,draggable:this.draggable,draggableCursor:this.draggableCursor,draggingCursor:this.draggingCursor,keyboardShortcuts:this.keyboardShortcuts,styles:this.styles,mapTypeId:this.mapTypeId.toLocaleLowerCase(),clickableIcons:this.clickableIcons,gestureHandling:this.gestureHandling,tilt:this.tilt,restriction:this.restriction}).then(()=>this._mapsWrapper.getNativeMap()).then(map=>this.mapReady.emit(map)),this._handleMapCenterChange(),this._handleMapZoomChange(),this._handleMapMouseEvents(),this._handleBoundsChange(),this._handleMapTypeIdChange(),this._handleTilesLoadedEvent(),this._handleIdleEvent(),this._handleControlChange()}ngOnDestroy(){this._observableSubscriptions.forEach(s=>s.unsubscribe()),this._mapsWrapper.clearInstanceListeners(),this._fitBoundsSubscription&&this._fitBoundsSubscription.unsubscribe()}ngOnChanges(changes){this._updateMapOptionsChanges(changes),this._updatePosition(changes)}_updateMapOptionsChanges(changes){const options={};Object.keys(changes).filter(k=>-1!==agm_core_AgmMap._mapOptionsAttributes.indexOf(k)).forEach(k=>{options[k]=changes[k].currentValue}),this._mapsWrapper.setMapOptions(options)}triggerResize(recenter=!0){return new Promise(resolve=>{setTimeout(()=>this._mapsWrapper.triggerMapEvent("resize").then(()=>{recenter&&(null!=this.fitBounds?this._fitBounds():this._setCenter()),resolve()}))})}_updatePosition(changes){(null!=changes.latitude||null!=changes.longitude||changes.fitBounds)&&("fitBounds"in changes?this._fitBounds():"number"==typeof this.latitude&&"number"==typeof this.longitude&&this._setCenter())}_setCenter(){const newCenter={lat:this.latitude,lng:this.longitude};this.usePanning?this._mapsWrapper.panTo(newCenter):this._mapsWrapper.setCenter(newCenter)}_fitBounds(){switch(this.fitBounds){case!0:this._subscribeToFitBoundsUpdates();break;case!1:this._fitBoundsSubscription&&this._fitBoundsSubscription.unsubscribe();break;default:this._fitBoundsSubscription&&this._fitBoundsSubscription.unsubscribe(),this._updateBounds(this.fitBounds,this.fitBoundsPadding)}}_subscribeToFitBoundsUpdates(){this._zone.runOutsideAngular(()=>{this._fitBoundsSubscription=this._fitBoundsService.getBounds$().subscribe(b=>{this._zone.run(()=>this._updateBounds(b,this.fitBoundsPadding))})})}_updateBounds(bounds,padding){if(bounds){if(this._isLatLngBoundsLiteral(bounds)&&"undefined"!=typeof google&&google&&google.maps&&google.maps.LatLngBounds){const newBounds=new google.maps.LatLngBounds;newBounds.union(bounds),bounds=newBounds}this.usePanning?this._mapsWrapper.panToBounds(bounds,padding):this._mapsWrapper.fitBounds(bounds,padding)}}_isLatLngBoundsLiteral(bounds){return null!=bounds&&void 0===bounds.extend}_handleMapCenterChange(){const s=this._mapsWrapper.subscribeToMapEvent("center_changed").subscribe(()=>{this._mapsWrapper.getCenter().then(center=>{this.latitude=center.lat(),this.longitude=center.lng(),this.centerChange.emit({lat:this.latitude,lng:this.longitude})})});this._observableSubscriptions.push(s)}_handleBoundsChange(){const s=this._mapsWrapper.subscribeToMapEvent("bounds_changed").subscribe(()=>{this._mapsWrapper.getBounds().then(bounds=>{this.boundsChange.emit(bounds)})});this._observableSubscriptions.push(s)}_handleMapTypeIdChange(){const s=this._mapsWrapper.subscribeToMapEvent("maptypeid_changed").subscribe(()=>{this._mapsWrapper.getMapTypeId().then(mapTypeId=>{this.mapTypeIdChange.emit(mapTypeId)})});this._observableSubscriptions.push(s)}_handleMapZoomChange(){const s=this._mapsWrapper.subscribeToMapEvent("zoom_changed").subscribe(()=>{this._mapsWrapper.getZoom().then(z=>{this.zoom=z,this.zoomChange.emit(z)})});this._observableSubscriptions.push(s)}_handleIdleEvent(){const s=this._mapsWrapper.subscribeToMapEvent("idle").subscribe(()=>{this.idle.emit(void 0)});this._observableSubscriptions.push(s)}_handleTilesLoadedEvent(){const s=this._mapsWrapper.subscribeToMapEvent("tilesloaded").subscribe(()=>this.tilesLoaded.emit(void 0));this._observableSubscriptions.push(s)}_handleMapMouseEvents(){[{name:"click",emitter:this.mapClick},{name:"rightclick",emitter:this.mapRightClick},{name:"dblclick",emitter:this.mapDblClick}].forEach(e=>{const s=this._mapsWrapper.subscribeToMapEvent(e.name).subscribe(([event])=>{event.placeId&&!this.showDefaultInfoWindow&&event.stop(),e.emitter.emit(event)});this._observableSubscriptions.push(s)})}_handleControlChange(){this._setControls(),this.mapControls.changes.subscribe(()=>this._setControls())}_setControls(){const controlOptions={fullscreenControl:!this.disableDefaultUI,mapTypeControl:!1,panControl:!1,rotateControl:!1,scaleControl:!1,streetViewControl:!this.disableDefaultUI,zoomControl:!this.disableDefaultUI};this._mapsWrapper.getNativeMap().then(()=>{this.mapControls.forEach(control=>Object.assign(controlOptions,control.getOptions())),this._mapsWrapper.setMapOptions(controlOptions)})}}agm_core_AgmMap.\u0275fac=function AgmMap_Factory(t){return new(t||agm_core_AgmMap)(core.Ic(core.u),core.Ic(agm_core_GoogleMapsAPIWrapper),core.Ic(core.T),core.Ic(agm_core_FitBoundsService),core.Ic(core.P))},agm_core_AgmMap.\u0275cmp=core.Cc({type:agm_core_AgmMap,selectors:[["agm-map"]],contentQueries:function AgmMap_ContentQueries(rf,ctx,dirIndex){if(1&rf&&core.Bc(dirIndex,AgmMapControl,!1),2&rf){let _t;core.jd(_t=core.Vc())&&(ctx.mapControls=_t)}},inputs:{longitude:"longitude",latitude:"latitude",zoom:"zoom",draggable:["mapDraggable","draggable"],disableDoubleClickZoom:"disableDoubleClickZoom",disableDefaultUI:"disableDefaultUI",scrollwheel:"scrollwheel",keyboardShortcuts:"keyboardShortcuts",styles:"styles",usePanning:"usePanning",fitBounds:"fitBounds",mapTypeId:"mapTypeId",clickableIcons:"clickableIcons",showDefaultInfoWindow:"showDefaultInfoWindow",gestureHandling:"gestureHandling",tilt:"tilt",minZoom:"minZoom",maxZoom:"maxZoom",controlSize:"controlSize",backgroundColor:"backgroundColor",draggableCursor:"draggableCursor",draggingCursor:"draggingCursor",fitBoundsPadding:"fitBoundsPadding",restriction:"restriction"},outputs:{mapClick:"mapClick",mapRightClick:"mapRightClick",mapDblClick:"mapDblClick",centerChange:"centerChange",boundsChange:"boundsChange",mapTypeIdChange:"mapTypeIdChange",idle:"idle",zoomChange:"zoomChange",mapReady:"mapReady",tilesLoaded:"tilesLoaded"},features:[core.vc([agm_core_CircleManager,agm_core_DataLayerManager,agm_core_DataLayerManager,agm_core_FitBoundsService,agm_core_GoogleMapsAPIWrapper,agm_core_InfoWindowManager,agm_core_KmlLayerManager,LayerManager,agm_core_MarkerManager,agm_core_PolygonManager,agm_core_PolylineManager,agm_core_RectangleManager]),core.uc],ngContentSelectors:_c0,decls:3,vars:0,consts:[[1,"agm-map-container-inner","sebm-google-map-container-inner"],[1,"agm-map-content"]],template:function AgmMap_Template(rf,ctx){1&rf&&(core.dd(),core.Jc(0,"div",0),core.Nc(1,"div",1),core.cd(2),core.Mc())},styles:[".agm-map-container-inner[_ngcontent-%COMP%] {\n      width: inherit;\n      height: inherit;\n    }\n    .agm-map-content[_ngcontent-%COMP%] {\n      display:none;\n    }"]}),agm_core_AgmMap._mapOptionsAttributes=["disableDoubleClickZoom","scrollwheel","draggable","draggableCursor","draggingCursor","keyboardShortcuts","styles","zoom","minZoom","maxZoom","mapTypeId","clickableIcons","gestureHandling","tilt","restriction"],agm_core_AgmMap.ctorParameters=()=>[{type:core.u},{type:agm_core_GoogleMapsAPIWrapper},{type:Object,decorators:[{type:core.B,args:[core.T]}]},{type:agm_core_FitBoundsService},{type:core.P}],agm_core_AgmMap.propDecorators={longitude:[{type:core.F}],latitude:[{type:core.F}],zoom:[{type:core.F}],minZoom:[{type:core.F}],maxZoom:[{type:core.F}],controlSize:[{type:core.F}],draggable:[{type:core.F,args:["mapDraggable"]}],disableDoubleClickZoom:[{type:core.F}],disableDefaultUI:[{type:core.F}],scrollwheel:[{type:core.F}],backgroundColor:[{type:core.F}],draggableCursor:[{type:core.F}],draggingCursor:[{type:core.F}],keyboardShortcuts:[{type:core.F}],styles:[{type:core.F}],usePanning:[{type:core.F}],fitBounds:[{type:core.F}],fitBoundsPadding:[{type:core.F}],mapTypeId:[{type:core.F}],clickableIcons:[{type:core.F}],showDefaultInfoWindow:[{type:core.F}],gestureHandling:[{type:core.F}],tilt:[{type:core.F}],restriction:[{type:core.F}],mapClick:[{type:core.R}],mapRightClick:[{type:core.R}],mapDblClick:[{type:core.R}],centerChange:[{type:core.R}],boundsChange:[{type:core.R}],mapTypeIdChange:[{type:core.R}],idle:[{type:core.R}],zoomChange:[{type:core.R}],mapReady:[{type:core.R}],tilesLoaded:[{type:core.R}],mapControls:[{type:core.r,args:[AgmMapControl]}]};let markerId=0;class agm_core_AgmMarker{constructor(_markerManager){this._markerManager=_markerManager,this.draggable=!1,this.visible=!0,this.openInfoWindow=!0,this.opacity=1,this.zIndex=1,this.clickable=!0,this.animationChange=new core.w,this.markerClick=new core.w,this.markerDblClick=new core.w,this.markerRightClick=new core.w,this.dragStart=new core.w,this.drag=new core.w,this.dragEnd=new core.w,this.mouseOver=new core.w,this.mouseOut=new core.w,this.infoWindow=new core.W,this._markerAddedToManger=!1,this._observableSubscriptions=[],this._fitBoundsDetails$=new ReplaySubject_ReplaySubject(1),this._id=(markerId++).toString()}ngAfterContentInit(){this.handleInfoWindowUpdate(),this.infoWindow.changes.subscribe(()=>this.handleInfoWindowUpdate())}handleInfoWindowUpdate(){if(this.infoWindow.length>1)throw new Error("Expected no more than one info window.");this.infoWindow.forEach(marker=>{marker.hostMarker=this})}ngOnChanges(changes){if("string"==typeof this.latitude&&(this.latitude=Number(this.latitude)),"string"==typeof this.longitude&&(this.longitude=Number(this.longitude)),"number"==typeof this.latitude&&"number"==typeof this.longitude){if(!this._markerAddedToManger)return this._markerManager.addMarker(this),this._updateFitBoundsDetails(),this._markerAddedToManger=!0,void this._addEventListeners();(changes.latitude||changes.longitude)&&(this._markerManager.updateMarkerPosition(this),this._updateFitBoundsDetails()),changes.title&&this._markerManager.updateTitle(this),changes.label&&this._markerManager.updateLabel(this),changes.draggable&&this._markerManager.updateDraggable(this),changes.iconUrl&&this._markerManager.updateIcon(this),changes.opacity&&this._markerManager.updateOpacity(this),changes.visible&&this._markerManager.updateVisible(this),changes.zIndex&&this._markerManager.updateZIndex(this),changes.clickable&&this._markerManager.updateClickable(this),changes.animation&&this._markerManager.updateAnimation(this)}}getFitBoundsDetails$(){return this._fitBoundsDetails$.asObservable()}_updateFitBoundsDetails(){this._fitBoundsDetails$.next({latLng:{lat:this.latitude,lng:this.longitude}})}_addEventListeners(){const cs=this._markerManager.createEventObservable("click",this).subscribe(()=>{this.openInfoWindow&&this.infoWindow.forEach(infoWindow=>infoWindow.open()),this.markerClick.emit(this)});this._observableSubscriptions.push(cs);const dcs=this._markerManager.createEventObservable("dblclick",this).subscribe(()=>{this.markerDblClick.emit(null)});this._observableSubscriptions.push(dcs);const rc=this._markerManager.createEventObservable("rightclick",this).subscribe(()=>{this.markerRightClick.emit(null)});this._observableSubscriptions.push(rc);const ds=this._markerManager.createEventObservable("dragstart",this).subscribe(e=>this.dragStart.emit(e));this._observableSubscriptions.push(ds);const d=this._markerManager.createEventObservable("drag",this).subscribe(e=>this.drag.emit(e));this._observableSubscriptions.push(d);const de=this._markerManager.createEventObservable("dragend",this).subscribe(e=>this.dragEnd.emit(e));this._observableSubscriptions.push(de);const mover=this._markerManager.createEventObservable("mouseover",this).subscribe(e=>this.mouseOver.emit(e));this._observableSubscriptions.push(mover);const mout=this._markerManager.createEventObservable("mouseout",this).subscribe(e=>this.mouseOut.emit(e));this._observableSubscriptions.push(mout);const anChng=this._markerManager.createEventObservable("animation_changed",this).subscribe(()=>{this.animationChange.emit(this.animation)});this._observableSubscriptions.push(anChng)}id(){return this._id}toString(){return"AgmMarker-"+this._id.toString()}ngOnDestroy(){this._markerManager.deleteMarker(this),this._observableSubscriptions.forEach(s=>s.unsubscribe())}}agm_core_AgmMarker.\u0275fac=function AgmMarker_Factory(t){return new(t||agm_core_AgmMarker)(core.Ic(agm_core_MarkerManager))},agm_core_AgmMarker.\u0275dir=core.Dc({type:agm_core_AgmMarker,selectors:[["agm-marker"]],contentQueries:function AgmMarker_ContentQueries(rf,ctx,dirIndex){if(1&rf&&core.Bc(dirIndex,agm_core_AgmInfoWindow,!1),2&rf){let _t;core.jd(_t=core.Vc())&&(ctx.infoWindow=_t)}},inputs:{draggable:["markerDraggable","draggable"],visible:"visible",openInfoWindow:"openInfoWindow",opacity:"opacity",zIndex:"zIndex",clickable:["markerClickable","clickable"],latitude:"latitude",longitude:"longitude",title:"title",label:"label",iconUrl:"iconUrl",animation:"animation"},outputs:{animationChange:"animationChange",markerClick:"markerClick",markerDblClick:"markerDblClick",markerRightClick:"markerRightClick",dragStart:"dragStart",drag:"drag",dragEnd:"dragEnd",mouseOver:"mouseOver",mouseOut:"mouseOut"},features:[core.vc([{provide:FitBoundsAccessor,useExisting:Object(core.pb)(()=>agm_core_AgmMarker)}]),core.uc]}),agm_core_AgmMarker.ctorParameters=()=>[{type:agm_core_MarkerManager}],agm_core_AgmMarker.propDecorators={latitude:[{type:core.F}],longitude:[{type:core.F}],title:[{type:core.F}],label:[{type:core.F}],draggable:[{type:core.F,args:["markerDraggable"]}],iconUrl:[{type:core.F}],visible:[{type:core.F}],openInfoWindow:[{type:core.F}],opacity:[{type:core.F}],zIndex:[{type:core.F}],clickable:[{type:core.F,args:["markerClickable"]}],animation:[{type:core.F}],animationChange:[{type:core.R}],markerClick:[{type:core.R}],markerDblClick:[{type:core.R}],markerRightClick:[{type:core.R}],dragStart:[{type:core.R}],drag:[{type:core.R}],dragEnd:[{type:core.R}],mouseOver:[{type:core.R}],mouseOut:[{type:core.R}],infoWindow:[{type:core.r,args:[agm_core_AgmInfoWindow]}]};class agm_core_AgmPolygon{constructor(_polygonManager){this._polygonManager=_polygonManager,this.clickable=!0,this.draggable=!1,this.editable=!1,this.geodesic=!1,this.paths=[],this.polyClick=new core.w,this.polyDblClick=new core.w,this.polyDrag=new core.w,this.polyDragEnd=new core.w,this.polyDragStart=new core.w,this.polyMouseDown=new core.w,this.polyMouseMove=new core.w,this.polyMouseOut=new core.w,this.polyMouseOver=new core.w,this.polyMouseUp=new core.w,this.polyRightClick=new core.w,this.polyPathsChange=new core.w,this._polygonAddedToManager=!1,this._subscriptions=[]}ngAfterContentInit(){this._polygonAddedToManager||this._init()}ngOnChanges(changes){this._polygonAddedToManager?this._polygonManager.setPolygonOptions(this,this._updatePolygonOptions(changes)):this._init()}_init(){this._polygonManager.addPolygon(this),this._polygonAddedToManager=!0,this._addEventListeners()}_addEventListeners(){[{name:"click",handler:ev=>this.polyClick.emit(ev)},{name:"dblclick",handler:ev=>this.polyDblClick.emit(ev)},{name:"drag",handler:ev=>this.polyDrag.emit(ev)},{name:"dragend",handler:ev=>this.polyDragEnd.emit(ev)},{name:"dragstart",handler:ev=>this.polyDragStart.emit(ev)},{name:"mousedown",handler:ev=>this.polyMouseDown.emit(ev)},{name:"mousemove",handler:ev=>this.polyMouseMove.emit(ev)},{name:"mouseout",handler:ev=>this.polyMouseOut.emit(ev)},{name:"mouseover",handler:ev=>this.polyMouseOver.emit(ev)},{name:"mouseup",handler:ev=>this.polyMouseUp.emit(ev)},{name:"rightclick",handler:ev=>this.polyRightClick.emit(ev)}].forEach(obj=>{const os=this._polygonManager.createEventObservable(obj.name,this).subscribe(obj.handler);this._subscriptions.push(os)}),this._polygonManager.createPathEventObservable(this).then(paths$=>{const os=paths$.subscribe(pathEvent=>this.polyPathsChange.emit(pathEvent));this._subscriptions.push(os)})}_updatePolygonOptions(changes){return Object.keys(changes).filter(k=>-1!==agm_core_AgmPolygon._polygonOptionsAttributes.indexOf(k)).reduce((obj,k)=>(obj[k]=changes[k].currentValue,obj),{})}id(){return this._id}ngOnDestroy(){this._polygonManager.deletePolygon(this),this._subscriptions.forEach(s=>s.unsubscribe())}getPath(){return this._polygonManager.getPath(this)}getPaths(){return this._polygonManager.getPaths(this)}}agm_core_AgmPolygon.\u0275fac=function AgmPolygon_Factory(t){return new(t||agm_core_AgmPolygon)(core.Ic(agm_core_PolygonManager))},agm_core_AgmPolygon.\u0275dir=core.Dc({type:agm_core_AgmPolygon,selectors:[["agm-polygon"]],inputs:{clickable:"clickable",draggable:["polyDraggable","draggable"],editable:"editable",geodesic:"geodesic",paths:"paths",fillColor:"fillColor",fillOpacity:"fillOpacity",strokeColor:"strokeColor",strokeOpacity:"strokeOpacity",strokeWeight:"strokeWeight",visible:"visible",zIndex:"zIndex"},outputs:{polyClick:"polyClick",polyDblClick:"polyDblClick",polyDrag:"polyDrag",polyDragEnd:"polyDragEnd",polyDragStart:"polyDragStart",polyMouseDown:"polyMouseDown",polyMouseMove:"polyMouseMove",polyMouseOut:"polyMouseOut",polyMouseOver:"polyMouseOver",polyMouseUp:"polyMouseUp",polyRightClick:"polyRightClick",polyPathsChange:"polyPathsChange"},features:[core.uc]}),agm_core_AgmPolygon._polygonOptionsAttributes=["clickable","draggable","editable","fillColor","fillOpacity","geodesic","icon","map","paths","strokeColor","strokeOpacity","strokeWeight","visible","zIndex","draggable","editable","visible"],agm_core_AgmPolygon.ctorParameters=()=>[{type:agm_core_PolygonManager}],agm_core_AgmPolygon.propDecorators={clickable:[{type:core.F}],draggable:[{type:core.F,args:["polyDraggable"]}],editable:[{type:core.F}],fillColor:[{type:core.F}],fillOpacity:[{type:core.F}],geodesic:[{type:core.F}],paths:[{type:core.F}],strokeColor:[{type:core.F}],strokeOpacity:[{type:core.F}],strokeWeight:[{type:core.F}],visible:[{type:core.F}],zIndex:[{type:core.F}],polyClick:[{type:core.R}],polyDblClick:[{type:core.R}],polyDrag:[{type:core.R}],polyDragEnd:[{type:core.R}],polyDragStart:[{type:core.R}],polyMouseDown:[{type:core.R}],polyMouseMove:[{type:core.R}],polyMouseOut:[{type:core.R}],polyMouseOver:[{type:core.R}],polyMouseUp:[{type:core.R}],polyRightClick:[{type:core.R}],polyPathsChange:[{type:core.R}]};class AgmPolylineIcon{ngOnInit(){if(null==this.path)throw new Error("Icon Sequence path is required")}}AgmPolylineIcon.\u0275fac=function AgmPolylineIcon_Factory(t){return new(t||AgmPolylineIcon)},AgmPolylineIcon.\u0275dir=core.Dc({type:AgmPolylineIcon,selectors:[["agm-icon-sequence"]],inputs:{fixedRotation:"fixedRotation",offset:"offset",repeat:"repeat",anchorX:"anchorX",anchorY:"anchorY",fillColor:"fillColor",fillOpacity:"fillOpacity",path:"path",rotation:"rotation",scale:"scale",strokeColor:"strokeColor",strokeOpacity:"strokeOpacity",strokeWeight:"strokeWeight"}}),AgmPolylineIcon.propDecorators={fixedRotation:[{type:core.F}],offset:[{type:core.F}],repeat:[{type:core.F}],anchorX:[{type:core.F}],anchorY:[{type:core.F}],fillColor:[{type:core.F}],fillOpacity:[{type:core.F}],path:[{type:core.F}],rotation:[{type:core.F}],scale:[{type:core.F}],strokeColor:[{type:core.F}],strokeOpacity:[{type:core.F}],strokeWeight:[{type:core.F}]};class agm_core_AgmPolylinePoint{constructor(){this.positionChanged=new core.w}ngOnChanges(changes){(changes.latitude||changes.longitude)&&this.positionChanged.emit({lat:changes.latitude?changes.latitude.currentValue:this.latitude,lng:changes.longitude?changes.longitude.currentValue:this.longitude})}getFitBoundsDetails$(){return this.positionChanged.pipe(Object(startWith.a)({lat:this.latitude,lng:this.longitude}),Object(map.a)(position=>({latLng:position})))}}agm_core_AgmPolylinePoint.\u0275fac=function AgmPolylinePoint_Factory(t){return new(t||agm_core_AgmPolylinePoint)},agm_core_AgmPolylinePoint.\u0275dir=core.Dc({type:agm_core_AgmPolylinePoint,selectors:[["agm-polyline-point"]],inputs:{latitude:"latitude",longitude:"longitude"},outputs:{positionChanged:"positionChanged"},features:[core.vc([{provide:FitBoundsAccessor,useExisting:Object(core.pb)(()=>agm_core_AgmPolylinePoint)}]),core.uc]}),agm_core_AgmPolylinePoint.ctorParameters=()=>[],agm_core_AgmPolylinePoint.propDecorators={latitude:[{type:core.F}],longitude:[{type:core.F}],positionChanged:[{type:core.R}]};let polylineId=0;class agm_core_AgmPolyline{constructor(_polylineManager){this._polylineManager=_polylineManager,this.clickable=!0,this.draggable=!1,this.editable=!1,this.geodesic=!1,this.visible=!0,this.lineClick=new core.w,this.lineDblClick=new core.w,this.lineDrag=new core.w,this.lineDragEnd=new core.w,this.lineDragStart=new core.w,this.lineMouseDown=new core.w,this.lineMouseMove=new core.w,this.lineMouseOut=new core.w,this.lineMouseOver=new core.w,this.lineMouseUp=new core.w,this.lineRightClick=new core.w,this.polyPathChange=new core.w,this._polylineAddedToManager=!1,this._subscriptions=[],this._id=(polylineId++).toString()}ngAfterContentInit(){this.points.length&&this.points.forEach(point=>{const s=point.positionChanged.subscribe(()=>{this._polylineManager.updatePolylinePoints(this)});this._subscriptions.push(s)}),this._polylineAddedToManager||this._init();const pointSub=this.points.changes.subscribe(()=>this._polylineManager.updatePolylinePoints(this));this._subscriptions.push(pointSub),this._polylineManager.updatePolylinePoints(this);const iconSub=this.iconSequences.changes.subscribe(()=>this._polylineManager.updateIconSequences(this));this._subscriptions.push(iconSub)}ngOnChanges(changes){if(!this._polylineAddedToManager)return void this._init();const options={};Object.keys(changes).filter(k=>-1!==agm_core_AgmPolyline._polylineOptionsAttributes.indexOf(k)).forEach(k=>options[k]=changes[k].currentValue),this._polylineManager.setPolylineOptions(this,options)}getPath(){return this._polylineManager.getPath(this)}_init(){this._polylineManager.addPolyline(this),this._polylineAddedToManager=!0,this._addEventListeners()}_addEventListeners(){[{name:"click",handler:ev=>this.lineClick.emit(ev)},{name:"dblclick",handler:ev=>this.lineDblClick.emit(ev)},{name:"drag",handler:ev=>this.lineDrag.emit(ev)},{name:"dragend",handler:ev=>this.lineDragEnd.emit(ev)},{name:"dragstart",handler:ev=>this.lineDragStart.emit(ev)},{name:"mousedown",handler:ev=>this.lineMouseDown.emit(ev)},{name:"mousemove",handler:ev=>this.lineMouseMove.emit(ev)},{name:"mouseout",handler:ev=>this.lineMouseOut.emit(ev)},{name:"mouseover",handler:ev=>this.lineMouseOver.emit(ev)},{name:"mouseup",handler:ev=>this.lineMouseUp.emit(ev)},{name:"rightclick",handler:ev=>this.lineRightClick.emit(ev)}].forEach(obj=>{const os=this._polylineManager.createEventObservable(obj.name,this).subscribe(obj.handler);this._subscriptions.push(os)}),this._polylineManager.createPathEventObservable(this).then(ob$=>{const os=ob$.subscribe(pathEvent=>this.polyPathChange.emit(pathEvent));this._subscriptions.push(os)})}_getPoints(){return this.points?this.points.toArray():[]}_getIcons(){return this.iconSequences?this.iconSequences.toArray():[]}id(){return this._id}ngOnDestroy(){this._polylineManager.deletePolyline(this),this._subscriptions.forEach(s=>s.unsubscribe())}}agm_core_AgmPolyline.\u0275fac=function AgmPolyline_Factory(t){return new(t||agm_core_AgmPolyline)(core.Ic(agm_core_PolylineManager))},agm_core_AgmPolyline.\u0275dir=core.Dc({type:agm_core_AgmPolyline,selectors:[["agm-polyline"]],contentQueries:function AgmPolyline_ContentQueries(rf,ctx,dirIndex){if(1&rf&&(core.Bc(dirIndex,agm_core_AgmPolylinePoint,!1),core.Bc(dirIndex,AgmPolylineIcon,!1)),2&rf){let _t;core.jd(_t=core.Vc())&&(ctx.points=_t),core.jd(_t=core.Vc())&&(ctx.iconSequences=_t)}},inputs:{clickable:"clickable",draggable:["polylineDraggable","draggable"],editable:"editable",geodesic:"geodesic",visible:"visible",strokeColor:"strokeColor",strokeOpacity:"strokeOpacity",strokeWeight:"strokeWeight",zIndex:"zIndex"},outputs:{lineClick:"lineClick",lineDblClick:"lineDblClick",lineDrag:"lineDrag",lineDragEnd:"lineDragEnd",lineDragStart:"lineDragStart",lineMouseDown:"lineMouseDown",lineMouseMove:"lineMouseMove",lineMouseOut:"lineMouseOut",lineMouseOver:"lineMouseOver",lineMouseUp:"lineMouseUp",lineRightClick:"lineRightClick",polyPathChange:"polyPathChange"},features:[core.uc]}),agm_core_AgmPolyline._polylineOptionsAttributes=["draggable","editable","visible","geodesic","strokeColor","strokeOpacity","strokeWeight","zIndex"],agm_core_AgmPolyline.ctorParameters=()=>[{type:agm_core_PolylineManager}],agm_core_AgmPolyline.propDecorators={clickable:[{type:core.F}],draggable:[{type:core.F,args:["polylineDraggable"]}],editable:[{type:core.F}],geodesic:[{type:core.F}],strokeColor:[{type:core.F}],strokeOpacity:[{type:core.F}],strokeWeight:[{type:core.F}],visible:[{type:core.F}],zIndex:[{type:core.F}],lineClick:[{type:core.R}],lineDblClick:[{type:core.R}],lineDrag:[{type:core.R}],lineDragEnd:[{type:core.R}],lineDragStart:[{type:core.R}],lineMouseDown:[{type:core.R}],lineMouseMove:[{type:core.R}],lineMouseOut:[{type:core.R}],lineMouseOver:[{type:core.R}],lineMouseUp:[{type:core.R}],lineRightClick:[{type:core.R}],polyPathChange:[{type:core.R}],points:[{type:core.r,args:[agm_core_AgmPolylinePoint]}],iconSequences:[{type:core.r,args:[AgmPolylineIcon]}]};class agm_core_AgmRectangle{constructor(_manager){this._manager=_manager,this.clickable=!0,this.draggable=!1,this.editable=!1,this.strokePosition="CENTER",this.strokeWeight=0,this.visible=!0,this.boundsChange=new core.w,this.rectangleClick=new core.w,this.rectangleDblClick=new core.w,this.drag=new core.w,this.dragEnd=new core.w,this.dragStart=new core.w,this.mouseDown=new core.w,this.mouseMove=new core.w,this.mouseOut=new core.w,this.mouseOver=new core.w,this.mouseUp=new core.w,this.rightClick=new core.w,this._rectangleAddedToManager=!1,this._eventSubscriptions=[]}ngOnInit(){this._manager.addRectangle(this),this._rectangleAddedToManager=!0,this._registerEventListeners()}ngOnChanges(changes){this._rectangleAddedToManager&&((changes.north||changes.east||changes.south||changes.west)&&this._manager.setBounds(this),changes.editable&&this._manager.setEditable(this),changes.draggable&&this._manager.setDraggable(this),changes.visible&&this._manager.setVisible(this),this._updateRectangleOptionsChanges(changes))}_updateRectangleOptionsChanges(changes){const options={},optionKeys=Object.keys(changes).filter(k=>-1!==agm_core_AgmRectangle._mapOptions.indexOf(k));optionKeys.forEach(k=>{options[k]=changes[k].currentValue}),optionKeys.length>0&&this._manager.setOptions(this,options)}_registerEventListeners(){const events=new Map;events.set("bounds_changed",this.boundsChange),events.set("click",this.rectangleClick),events.set("dblclick",this.rectangleDblClick),events.set("drag",this.drag),events.set("dragend",this.dragEnd),events.set("dragStart",this.dragStart),events.set("mousedown",this.mouseDown),events.set("mousemove",this.mouseMove),events.set("mouseout",this.mouseOut),events.set("mouseover",this.mouseOver),events.set("mouseup",this.mouseUp),events.set("rightclick",this.rightClick),events.forEach((eventEmitter,eventName)=>{this._eventSubscriptions.push(this._manager.createEventObservable(eventName,this).subscribe(value=>{switch(eventName){case"bounds_changed":this._manager.getBounds(this).then(bounds=>eventEmitter.emit({north:bounds.getNorthEast().lat(),east:bounds.getNorthEast().lng(),south:bounds.getSouthWest().lat(),west:bounds.getSouthWest().lng()}));break;default:eventEmitter.emit(value)}}))})}ngOnDestroy(){this._eventSubscriptions.forEach(s=>s.unsubscribe()),this._eventSubscriptions=null,this._manager.removeRectangle(this)}getBounds(){return this._manager.getBounds(this)}}agm_core_AgmRectangle.\u0275fac=function AgmRectangle_Factory(t){return new(t||agm_core_AgmRectangle)(core.Ic(agm_core_RectangleManager))},agm_core_AgmRectangle.\u0275dir=core.Dc({type:agm_core_AgmRectangle,selectors:[["agm-rectangle"]],inputs:{clickable:"clickable",draggable:["rectangleDraggable","draggable"],editable:"editable",strokePosition:"strokePosition",strokeWeight:"strokeWeight",visible:"visible",north:"north",east:"east",south:"south",west:"west",fillColor:"fillColor",fillOpacity:"fillOpacity",strokeColor:"strokeColor",strokeOpacity:"strokeOpacity",zIndex:"zIndex"},outputs:{boundsChange:"boundsChange",rectangleClick:"rectangleClick",rectangleDblClick:"rectangleDblClick",drag:"drag",dragEnd:"dragEnd",dragStart:"dragStart",mouseDown:"mouseDown",mouseMove:"mouseMove",mouseOut:"mouseOut",mouseOver:"mouseOver",mouseUp:"mouseUp",rightClick:"rightClick"},features:[core.uc]}),agm_core_AgmRectangle._mapOptions=["fillColor","fillOpacity","strokeColor","strokeOpacity","strokePosition","strokeWeight","visible","zIndex","clickable"],agm_core_AgmRectangle.ctorParameters=()=>[{type:agm_core_RectangleManager}],agm_core_AgmRectangle.propDecorators={north:[{type:core.F}],east:[{type:core.F}],south:[{type:core.F}],west:[{type:core.F}],clickable:[{type:core.F}],draggable:[{type:core.F,args:["rectangleDraggable"]}],editable:[{type:core.F}],fillColor:[{type:core.F}],fillOpacity:[{type:core.F}],strokeColor:[{type:core.F}],strokeOpacity:[{type:core.F}],strokePosition:[{type:core.F}],strokeWeight:[{type:core.F}],visible:[{type:core.F}],zIndex:[{type:core.F}],boundsChange:[{type:core.R}],rectangleClick:[{type:core.R}],rectangleDblClick:[{type:core.R}],drag:[{type:core.R}],dragEnd:[{type:core.R}],dragStart:[{type:core.R}],mouseDown:[{type:core.R}],mouseMove:[{type:core.R}],mouseOut:[{type:core.R}],mouseOver:[{type:core.R}],mouseUp:[{type:core.R}],rightClick:[{type:core.R}]};let layerId$3=0;class AgmTransitLayer{constructor(_manager){this._manager=_manager,this._addedToManager=!1,this._id=(layerId$3++).toString(),this.visible=!0}ngOnInit(){this._addedToManager||(this._manager.addTransitLayer(this),this._addedToManager=!0)}id(){return this._id}toString(){return"AgmTransitLayer-"+this._id.toString()}ngOnDestroy(){this._manager.deleteLayer(this)}}AgmTransitLayer.\u0275fac=function AgmTransitLayer_Factory(t){return new(t||AgmTransitLayer)(core.Ic(LayerManager))},AgmTransitLayer.\u0275dir=core.Dc({type:AgmTransitLayer,selectors:[["agm-transit-layer"]],inputs:{visible:"visible"}}),AgmTransitLayer.ctorParameters=()=>[{type:LayerManager}],AgmTransitLayer.propDecorators={visible:[{type:core.F}]};class AgmCoreModule{static forRoot(lazyMapsAPILoaderConfig){return{ngModule:AgmCoreModule,providers:[...BROWSER_GLOBALS_PROVIDERS,{provide:MapsAPILoader,useClass:LazyMapsAPILoader},{provide:LAZY_MAPS_API_CONFIG,useValue:lazyMapsAPILoaderConfig}]}}}AgmCoreModule.\u0275mod=core.Gc({type:AgmCoreModule}),AgmCoreModule.\u0275inj=core.Fc({factory:function AgmCoreModule_Factory(t){return new(t||AgmCoreModule)}})}};